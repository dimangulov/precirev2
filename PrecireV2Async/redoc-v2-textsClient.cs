//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.0.5.0 (NJsonSchema v10.0.22.0 (Newtonsoft.Json v11.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."

namespace Precire
{
    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.0.5.0 (NJsonSchema v10.0.22.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class redoc_v2_textsClient 
    {
        private string _baseUrl = "https://api.precire.ai/v2/texts";
        private System.Net.Http.HttpClient _httpClient;
        private System.Lazy<Newtonsoft.Json.JsonSerializerSettings> _settings;
    
        public redoc_v2_textsClient(System.Net.Http.HttpClient httpClient)
        {
            _httpClient = httpClient; 
            _settings = new System.Lazy<Newtonsoft.Json.JsonSerializerSettings>(() => 
            {
                var settings = new Newtonsoft.Json.JsonSerializerSettings();
                UpdateJsonSerializerSettings(settings);
                return settings;
            });
        }
    
        public string BaseUrl 
        {
            get { return _baseUrl; }
            set { _baseUrl = value; }
        }
    
        protected Newtonsoft.Json.JsonSerializerSettings JsonSerializerSettings { get { return _settings.Value; } }
    
        partial void UpdateJsonSerializerSettings(Newtonsoft.Json.JsonSerializerSettings settings);
        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, string url);
        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, System.Text.StringBuilder urlBuilder);
        partial void ProcessResponse(System.Net.Http.HttpClient client, System.Net.Http.HttpResponseMessage response);
    
        /// <summary>Analyze text documents (preview)</summary>
        /// <param name="content_Language">Language of the provided text.</param>
        /// <param name="content_Type">Media type of the body sent to the API.</param>
        /// <param name="ocp_Apim_Subscription_Key">Subscription key which provides access to this API. Found in your [Profile](https://precire.ai/developer).</param>
        /// <returns>Successful request</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public System.Threading.Tasks.Task<Response> V2TextsPostAsync(ContentLanguage content_Language, ContentType content_Type, string ocp_Apim_Subscription_Key, Body body)
        {
            return V2TextsPostAsync(content_Language, content_Type, ocp_Apim_Subscription_Key, body, System.Threading.CancellationToken.None);
        }
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Analyze text documents (preview)</summary>
        /// <param name="content_Language">Language of the provided text.</param>
        /// <param name="content_Type">Media type of the body sent to the API.</param>
        /// <param name="ocp_Apim_Subscription_Key">Subscription key which provides access to this API. Found in your [Profile](https://precire.ai/developer).</param>
        /// <returns>Successful request</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public async System.Threading.Tasks.Task<Response> V2TextsPostAsync(ContentLanguage content_Language, ContentType content_Type, string ocp_Apim_Subscription_Key, Body body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/");
    
            var client_ = _httpClient;


            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    if (ocp_Apim_Subscription_Key == null)
                        throw new System.ArgumentNullException("ocp_Apim_Subscription_Key");
                    request_.Headers.TryAddWithoutValidation("Ocp-Apim-Subscription-Key", ConvertToString(ocp_Apim_Subscription_Key, System.Globalization.CultureInfo.InvariantCulture));
                    var content_ = new System.Net.Http.StringContent(Newtonsoft.Json.JsonConvert.SerializeObject(body, _settings.Value));
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;

                    if (content_Language == null)
                        throw new System.ArgumentNullException("content_Language");
                    request_.Content.Headers.Add("Content-Language", ConvertToString(content_Language, System.Globalization.CultureInfo.InvariantCulture));
                    /*if (content_Type == null)
                        throw new System.ArgumentNullException("content_Type");
                    request_.Content.Headers.TryAddWithoutValidation("Content-Type", ConvertToString(content_Type, System.Globalization.CultureInfo.InvariantCulture));*/

                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));
    
                    PrepareRequest(client_, request_, urlBuilder_);
                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);
                    PrepareRequest(client_, request_, url_);
    
                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }
    
                        ProcessResponse(client_, response_);
    
                        var status_ = ((int)response_.StatusCode).ToString();
                        if (status_ == "201") 
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<Response>(response_, headers_).ConfigureAwait(false);
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == "400") 
                        {
                            string responseText_ = ( response_.Content == null ) ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("Bad request: Request was malformed, detailed error in \"detail\"", (int)response_.StatusCode, responseText_, headers_, null);
                        }
                        else
                        if (status_ == "401") 
                        {
                            string responseText_ = ( response_.Content == null ) ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("Authentication Failure: The supplied API key was invalid", (int)response_.StatusCode, responseText_, headers_, null);
                        }
                        else
                        if (status_ == "415") 
                        {
                            string responseText_ = ( response_.Content == null ) ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("Incompatible Media Type: Check that you are supplying application/json", (int)response_.StatusCode, responseText_, headers_, null);
                        }
                        else
                        if (status_ == "429") 
                        {
                            string responseText_ = ( response_.Content == null ) ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("Exceeded API subscription limits: Rate limit or request limit exceeded", (int)response_.StatusCode, responseText_, headers_, null);
                        }
                        else
                        if (status_ == "500") 
                        {
                            string responseText_ = ( response_.Content == null ) ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("Internal server error: Request leads to an internal server error, detailed error in \"detail\"", (int)response_.StatusCode, responseText_, headers_, null);
                        }
                        else
                        if (status_ != "200" && status_ != "204")
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false); 
                            throw new ApiException("The HTTP status code of the response was not expected (" + (int)response_.StatusCode + ").", (int)response_.StatusCode, responseData_, headers_, null);
                        }
            
                        return default(Response);
                    }
                    finally
                    {
                        if (response_ != null)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
            }
        }
    
        /// <summary>Delete text document (preview)</summary>
        /// <param name="id">document id</param>
        /// <param name="content_Type">Media type of the body sent to the API.</param>
        /// <param name="ocp_Apim_Subscription_Key">Subscription key which provides access to this API. Found in your [Profile](https://precire.ai/developer).</param>
        /// <returns>Successful request</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public System.Threading.Tasks.Task<object> V2TextsIdDeleteAsync(System.Guid id, ContentType2 content_Type, string ocp_Apim_Subscription_Key)
        {
            return V2TextsIdDeleteAsync(id, content_Type, ocp_Apim_Subscription_Key, System.Threading.CancellationToken.None);
        }
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Delete text document (preview)</summary>
        /// <param name="id">document id</param>
        /// <param name="content_Type">Media type of the body sent to the API.</param>
        /// <param name="ocp_Apim_Subscription_Key">Subscription key which provides access to this API. Found in your [Profile](https://precire.ai/developer).</param>
        /// <returns>Successful request</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public async System.Threading.Tasks.Task<object> V2TextsIdDeleteAsync(System.Guid id, ContentType2 content_Type, string ocp_Apim_Subscription_Key, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");
    
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));
    
            var client_ = _httpClient;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    if (content_Type == null)
                        throw new System.ArgumentNullException("content_Type");
                    request_.Headers.TryAddWithoutValidation("Content-Type", ConvertToString(content_Type, System.Globalization.CultureInfo.InvariantCulture));
                    if (ocp_Apim_Subscription_Key == null)
                        throw new System.ArgumentNullException("ocp_Apim_Subscription_Key");
                    request_.Headers.TryAddWithoutValidation("Ocp-Apim-Subscription-Key", ConvertToString(ocp_Apim_Subscription_Key, System.Globalization.CultureInfo.InvariantCulture));
                    request_.Method = new System.Net.Http.HttpMethod("DELETE");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));
    
                    PrepareRequest(client_, request_, urlBuilder_);
                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);
                    PrepareRequest(client_, request_, url_);
    
                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }
    
                        ProcessResponse(client_, response_);
    
                        var status_ = ((int)response_.StatusCode).ToString();
                        if (status_ == "200") 
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<object>(response_, headers_).ConfigureAwait(false);
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == "400") 
                        {
                            string responseText_ = ( response_.Content == null ) ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("Bad request: Request was malformed, detailed error in \"detail\"", (int)response_.StatusCode, responseText_, headers_, null);
                        }
                        else
                        if (status_ == "401") 
                        {
                            string responseText_ = ( response_.Content == null ) ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("Authentication Failure: The supplied API key was invalid", (int)response_.StatusCode, responseText_, headers_, null);
                        }
                        else
                        if (status_ == "404") 
                        {
                            string responseText_ = ( response_.Content == null ) ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("Not found: Document not found", (int)response_.StatusCode, responseText_, headers_, null);
                        }
                        else
                        if (status_ == "415") 
                        {
                            string responseText_ = ( response_.Content == null ) ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("Incompatible Media Type: Check that you are supplying application/json", (int)response_.StatusCode, responseText_, headers_, null);
                        }
                        else
                        if (status_ == "429") 
                        {
                            string responseText_ = ( response_.Content == null ) ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("Exceeded API subscription limits: Rate limit or request limit exceeded", (int)response_.StatusCode, responseText_, headers_, null);
                        }
                        else
                        if (status_ == "500") 
                        {
                            string responseText_ = ( response_.Content == null ) ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("Internal server error: Request leads to an internal server error, detailed error in \"detail\"", (int)response_.StatusCode, responseText_, headers_, null);
                        }
                        else
                        if (status_ != "200" && status_ != "204")
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false); 
                            throw new ApiException("The HTTP status code of the response was not expected (" + (int)response_.StatusCode + ").", (int)response_.StatusCode, responseData_, headers_, null);
                        }
            
                        return default(object);
                    }
                    finally
                    {
                        if (response_ != null)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
            }
        }
    
        /// <summary>Text document result (preview)</summary>
        /// <param name="id">Text document ID</param>
        /// <param name="content_Type">Media type of the body sent to the API.</param>
        /// <param name="ocp_Apim_Subscription_Key">Subscription key which provides access to this API. Found in your [Profile](https://precire.ai/developer).</param>
        /// <returns>Successful request</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public System.Threading.Tasks.Task<Response2> V2TextsIdGetAsync(System.Guid id, ContentType3 content_Type, string ocp_Apim_Subscription_Key)
        {
            return V2TextsIdGetAsync(id, content_Type, ocp_Apim_Subscription_Key, System.Threading.CancellationToken.None);
        }
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Text document result (preview)</summary>
        /// <param name="id">Text document ID</param>
        /// <param name="content_Type">Media type of the body sent to the API.</param>
        /// <param name="ocp_Apim_Subscription_Key">Subscription key which provides access to this API. Found in your [Profile](https://precire.ai/developer).</param>
        /// <returns>Successful request</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public async System.Threading.Tasks.Task<Response2> V2TextsIdGetAsync(System.Guid id, ContentType3 content_Type, string ocp_Apim_Subscription_Key, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");
    
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));
    
            var client_ = _httpClient;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    if (content_Type == null)
                        throw new System.ArgumentNullException("content_Type");
                    request_.Headers.TryAddWithoutValidation("Content-Type", ConvertToString(content_Type, System.Globalization.CultureInfo.InvariantCulture));
                    if (ocp_Apim_Subscription_Key == null)
                        throw new System.ArgumentNullException("ocp_Apim_Subscription_Key");
                    request_.Headers.TryAddWithoutValidation("Ocp-Apim-Subscription-Key", ConvertToString(ocp_Apim_Subscription_Key, System.Globalization.CultureInfo.InvariantCulture));
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));
    
                    PrepareRequest(client_, request_, urlBuilder_);
                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);
                    PrepareRequest(client_, request_, url_);
    
                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }
    
                        ProcessResponse(client_, response_);
    
                        var status_ = ((int)response_.StatusCode).ToString();
                        if (status_ == "200") 
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<Response2>(response_, headers_).ConfigureAwait(false);
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == "400") 
                        {
                            string responseText_ = ( response_.Content == null ) ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("Bad request: Request was malformed, detailed error in \"detail\"", (int)response_.StatusCode, responseText_, headers_, null);
                        }
                        else
                        if (status_ == "401") 
                        {
                            string responseText_ = ( response_.Content == null ) ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("Authentication Failure: The supplied API key was invalid", (int)response_.StatusCode, responseText_, headers_, null);
                        }
                        else
                        if (status_ == "404") 
                        {
                            string responseText_ = ( response_.Content == null ) ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("Not found: Document not found", (int)response_.StatusCode, responseText_, headers_, null);
                        }
                        else
                        if (status_ == "415") 
                        {
                            string responseText_ = ( response_.Content == null ) ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("Incompatible Media Type: Check that you are supplying application/json", (int)response_.StatusCode, responseText_, headers_, null);
                        }
                        else
                        if (status_ == "429") 
                        {
                            string responseText_ = ( response_.Content == null ) ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("Exceeded API subscription limits: Rate limit or request limit exceeded", (int)response_.StatusCode, responseText_, headers_, null);
                        }
                        else
                        if (status_ == "500") 
                        {
                            string responseText_ = ( response_.Content == null ) ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("Internal server error: Request leads to an internal server error, detailed error in \"detail\"", (int)response_.StatusCode, responseText_, headers_, null);
                        }
                        else
                        if (status_ != "200" && status_ != "204")
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false); 
                            throw new ApiException("The HTTP status code of the response was not expected (" + (int)response_.StatusCode + ").", (int)response_.StatusCode, responseData_, headers_, null);
                        }
            
                        return default(Response2);
                    }
                    finally
                    {
                        if (response_ != null)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
            }
        }
    
        protected struct ObjectResponseResult<T>
        {
            public ObjectResponseResult(T responseObject, string responseText)
            {
                this.Object = responseObject;
                this.Text = responseText;
            }
    
            public T Object { get; }
    
            public string Text { get; }
        }
    
        public bool ReadResponseAsString { get; set; }
        
        protected virtual async System.Threading.Tasks.Task<ObjectResponseResult<T>> ReadObjectResponseAsync<T>(System.Net.Http.HttpResponseMessage response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers)
        {
            if (response == null || response.Content == null)
            {
                return new ObjectResponseResult<T>(default(T), string.Empty);
            }
        
            if (ReadResponseAsString)
            {
                var responseText = await response.Content.ReadAsStringAsync().ConfigureAwait(false);
                try
                {
                    var typedBody = Newtonsoft.Json.JsonConvert.DeserializeObject<T>(responseText, JsonSerializerSettings);
                    return new ObjectResponseResult<T>(typedBody, responseText);
                }
                catch (Newtonsoft.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body string as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, responseText, headers, exception);
                }
            }
            else
            {
                try
                {
                    using (var responseStream = await response.Content.ReadAsStreamAsync().ConfigureAwait(false))
                    using (var streamReader = new System.IO.StreamReader(responseStream))
                    using (var jsonTextReader = new Newtonsoft.Json.JsonTextReader(streamReader))
                    {
                        var serializer = Newtonsoft.Json.JsonSerializer.Create(JsonSerializerSettings);
                        var typedBody = serializer.Deserialize<T>(jsonTextReader);
                        return new ObjectResponseResult<T>(typedBody, string.Empty);
                    }
                }
                catch (Newtonsoft.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body stream as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, string.Empty, headers, exception);
                }
            }
        }
    
        private string ConvertToString(object value, System.Globalization.CultureInfo cultureInfo)
        {
            if (value is System.Enum)
            {
                string name = System.Enum.GetName(value.GetType(), value);
                if (name != null)
                {
                    var field = System.Reflection.IntrospectionExtensions.GetTypeInfo(value.GetType()).GetDeclaredField(name);
                    if (field != null)
                    {
                        var attribute = System.Reflection.CustomAttributeExtensions.GetCustomAttribute(field, typeof(System.Runtime.Serialization.EnumMemberAttribute)) 
                            as System.Runtime.Serialization.EnumMemberAttribute;
                        if (attribute != null)
                        {
                            return attribute.Value != null ? attribute.Value : name;
                        }
                    }
                }
            }
            else if (value is bool) {
                return System.Convert.ToString(value, cultureInfo).ToLowerInvariant();
            }
            else if (value is byte[])
            {
                return System.Convert.ToBase64String((byte[]) value);
            }
            else if (value != null && value.GetType().IsArray)
            {
                var array = System.Linq.Enumerable.OfType<object>((System.Array) value);
                return string.Join(",", System.Linq.Enumerable.Select(array, o => ConvertToString(o, cultureInfo)));
            }
        
            return System.Convert.ToString(value, cultureInfo);
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Audio_post 
    {
        /// <summary>Aggregated results you want to request.</summary>
        [Newtonsoft.Json.JsonProperty("aggregations", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        public System.Collections.Generic.ICollection<Aggregations> Aggregations { get; set; }
    
        [Newtonsoft.Json.JsonProperty("audio", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Audio Audio { get; set; }
    
        /// <summary>Comparisons you want to request.</summary>
        [Newtonsoft.Json.JsonProperty("comparisons", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        public System.Collections.Generic.ICollection<Comparisons> Comparisons { get; set; }
    
        /// <summary>Standard results you want to request.</summary>
        [Newtonsoft.Json.JsonProperty("results", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        public System.Collections.Generic.ICollection<Results> Results { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Content_audio 
    {
        /// <summary>The audio you want to analyze as base64 string.</summary>
        [Newtonsoft.Json.JsonProperty("content", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public byte[] Content { get; set; }
    
        /// <summary>The 'reference' has to match your document type to yield optimal prediction results. If your document type is not represented in the list of available types, either choose a type closely related to your document type or select 'default'. We are always interested in adding new document types, thus, if you require a specific document type that is not yet available, feel free to contact us.
        /// 
        /// The types below are currently available for the languages indicated after the type name.
        /// * **email** (en/de) - This type is intended for any kind of email.
        /// * **job_ad_brief** (de) - This type is intended for brief job ads that only contain the most important information and do not describe the job in detail.
        /// * **job_ad** (de) - This type is intended for job ads published by companies and institutions.
        /// * **marketing_brochure** (en/de) - This type is intended for brochures marketing companies, products, initiatives, and similar topics.
        /// * **marketing_flyer** (en/de) - This type is intended for flyers on various topics. Information is conveyed in little detail.
        /// * **marketing_magazine** (de) - This type is intended for magazines marketing companies, products, initiatives, and similar topics. Information is provided in detail.
        /// * **marketing_newsletter** (de) - This type is intended for marketing newsletters from companies and institutions on various topics.
        /// * **marketing** (de) - Use this type for marketing documents that do not have a suitable match with any of the marketing types above.
        /// * **presentation_business** (en) - This type is intended for verbal presentations of top managers concerning the annual result and developments in their organization. The documents may contain texts of multiple speakers referring to developments concerning their domains, e.g. CEO and CFO.
        /// * **press_release** (en/de) - This type is intended for press releases from companies and institutions on various topics.
        /// * **qa_financial** (en) - This type is intended for the Q&amp;A section of analyst calls.
        /// * **radio_report** (de) - This type is intended for radio reports concerning various topics.
        /// * **report_business** (en/de) - This type is intended for annual and quarterly reports of companies.
        /// * **survey** (de) - This type is intended for evaluations from customers and employees.
        /// * **default** (en/de) - Use this type if you cannot find a more suitable type above.</summary>
        [Newtonsoft.Json.JsonProperty("reference", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Content_audioReference Reference { get; set; }
    
        /// <summary>Type of the audio file.</summary>
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Content_audioType Type { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Content_text 
    {
        /// <summary>The text document you want to analyze. Depending on the "type" you need to send the content base64 encoded or not. For "type" string the content needs to be sent as plain text. For all other "type"`s e.g. "pdf" or "docx" needs to be sent the content as base64 encoded string.</summary>
        [Newtonsoft.Json.JsonProperty("content", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Content { get; set; }
    
        /// <summary>The 'reference' has to match your document type to yield optimal prediction results. If your document type is not represented in the list of available types, either choose a type closely related to your document type or select 'default'. We are always interested in adding new document types, thus, if you require a specific document type that is not yet available, feel free to contact us.
        /// 
        /// The types below are currently available for the languages indicated after the type name.
        /// * **email** (en/de) - This type is intended for any kind of email.
        /// * **job_ad_brief** (de) - This type is intended for brief job ads that only contain the most important information and do not describe the job in detail.
        /// * **job_ad** (de) - This type is intended for job ads published by companies and institutions.
        /// * **marketing_brochure** (en/de) - This type is intended for brochures marketing companies, products, initiatives, and similar topics.
        /// * **marketing_flyer** (en/de) - This type is intended for flyers on various topics. Information is conveyed in little detail.
        /// * **marketing_magazine** (de) - This type is intended for magazines marketing companies, products, initiatives, and similar topics. Information is provided in detail.
        /// * **marketing_newsletter** (de) - This type is intended for marketing newsletters from companies and institutions on various topics.
        /// * **marketing** (de) - Use this type for marketing documents that do not have a suitable match with any of the marketing types above.
        /// * **presentation_business** (en) - This type is intended for verbal presentations of top managers concerning the annual result and developments in their organization. The documents may contain texts of multiple speakers referring to developments concerning their domains, e.g. CEO and CFO.
        /// * **press_release** (en/de) - This type is intended for press releases from companies and institutions on various topics.
        /// * **qa_financial** (en) - This type is intended for the Q&amp;A section of analyst calls.
        /// * **radio_report** (de) - This type is intended for radio reports concerning various topics.
        /// * **report_business** (en/de) - This type is intended for annual and quarterly reports of companies.
        /// * **survey** (de) - This type is intended for evaluations from customers and employees.
        /// * **default** (en/de) - Use this type if you cannot find a more suitable type above.</summary>
        [Newtonsoft.Json.JsonProperty("reference", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Content_textReference Reference { get; set; }
    
        /// <summary>Type of the text document file.</summary>
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Content_textType Type { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Output_audios_audio 
    {
        /// <summary>Time of audio creation.</summary>
        [Newtonsoft.Json.JsonProperty("created_at", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset Created_at { get; set; }
    
        /// <summary>ID of the audio.</summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Guid Id { get; set; }
    
        [Newtonsoft.Json.JsonProperty("reference", Required = Newtonsoft.Json.Required.Always)]
        public Output_audios_audioReference Reference { get; set; }
    
        /// <summary>Current state of the audio processing.</summary>
        [Newtonsoft.Json.JsonProperty("state", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Output_audios_audioState State { get; set; }
    
        /// <summary>Type of the audio file.</summary>
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Output_audios_audioType Type { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Output_audios_document 
    {
        /// <summary>Length of the audio file in seconds.</summary>
        [Newtonsoft.Json.JsonProperty("audio_length", Required = Newtonsoft.Json.Required.Always)]
        public int Audio_length { get; set; }
    
        /// <summary>Length of the audio transcript in characters.</summary>
        [Newtonsoft.Json.JsonProperty("transcript_length", Required = Newtonsoft.Json.Required.Always)]
        public int Transcript_length { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Output_get_audio 
    {
        /// <summary>Object containing your requested aggregations.</summary>
        [Newtonsoft.Json.JsonProperty("aggregations", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Aggregations2 Aggregations { get; set; }
    
        [Newtonsoft.Json.JsonProperty("audio", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Audio2 Audio { get; set; }
    
        /// <summary>Object containing your requested comparisons.</summary>
        [Newtonsoft.Json.JsonProperty("comparisons", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Comparisons2 Comparisons { get; set; }
    
        [Newtonsoft.Json.JsonProperty("document", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Document Document { get; set; }
    
        /// <summary>Object containing your requested results.</summary>
        [Newtonsoft.Json.JsonProperty("results", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Results2 Results { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Output_get_text 
    {
        /// <summary>Object containing your requested aggregations.</summary>
        [Newtonsoft.Json.JsonProperty("aggregations", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Aggregations3 Aggregations { get; set; }
    
        /// <summary>Object containing your requested comparisons.</summary>
        [Newtonsoft.Json.JsonProperty("comparisons", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Comparisons3 Comparisons { get; set; }
    
        [Newtonsoft.Json.JsonProperty("document", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Document2 Document { get; set; }
    
        /// <summary>Object containing your requested results.</summary>
        [Newtonsoft.Json.JsonProperty("results", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Results3 Results { get; set; }
    
        [Newtonsoft.Json.JsonProperty("text", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Text Text { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Output_post_audio 
    {
        [Newtonsoft.Json.JsonProperty("audio", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Audio3 Audio { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Output_post_text 
    {
        [Newtonsoft.Json.JsonProperty("text", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Text2 Text { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Output_texts_document 
    {
        /// <summary>Return document chars.</summary>
        [Newtonsoft.Json.JsonProperty("chars", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<object> Chars { get; set; }
    
        /// <summary>Length of the text document parsed in characters.</summary>
        [Newtonsoft.Json.JsonProperty("text_parsed_length", Required = Newtonsoft.Json.Required.Always)]
        public int Text_parsed_length { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Output_texts_text 
    {
        /// <summary>Time of text document creation.</summary>
        [Newtonsoft.Json.JsonProperty("created_at", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset Created_at { get; set; }
    
        /// <summary>ID of the text document.</summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Guid Id { get; set; }
    
        [Newtonsoft.Json.JsonProperty("reference", Required = Newtonsoft.Json.Required.Always)]
        public Output_texts_textReference Reference { get; set; }
    
        /// <summary>State of the text document processing.</summary>
        [Newtonsoft.Json.JsonProperty("state", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Output_texts_textState State { get; set; }
    
        /// <summary>Type of the text document file.</summary>
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.AllowNull)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Output_texts_textType? Type { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Text_post 
    {
        /// <summary>Aggregated results you want to request.</summary>
        [Newtonsoft.Json.JsonProperty("aggregations", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        public System.Collections.Generic.ICollection<Aggregations4> Aggregations { get; set; }
    
        /// <summary>Comparisons you want to request.</summary>
        [Newtonsoft.Json.JsonProperty("comparisons", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        public System.Collections.Generic.ICollection<Comparisons4> Comparisons { get; set; }
    
        /// <summary>Standard results you want to request.</summary>
        [Newtonsoft.Json.JsonProperty("results", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        public System.Collections.Generic.ICollection<Results4> Results { get; set; }
    
        [Newtonsoft.Json.JsonProperty("text", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Text3 Text { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum ContentLanguage
    {
        [System.Runtime.Serialization.EnumMember(Value = @"de")]
        De = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"en")]
        En = 1,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum ContentType
    {
        [System.Runtime.Serialization.EnumMember(Value = @"application/json")]
        Application_json = 0,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Body 
    {
        /// <summary>Aggregated results you want to request.</summary>
        [Newtonsoft.Json.JsonProperty("aggregations", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        public System.Collections.Generic.ICollection<Aggregations5> Aggregations { get; set; }
    
        /// <summary>Comparisons you want to request.</summary>
        [Newtonsoft.Json.JsonProperty("comparisons", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        public System.Collections.Generic.ICollection<Comparisons5> Comparisons { get; set; }
    
        /// <summary>Standard results you want to request.</summary>
        [Newtonsoft.Json.JsonProperty("results", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        public System.Collections.Generic.ICollection<Results5> Results { get; set; }
    
        [Newtonsoft.Json.JsonProperty("text", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Text4 Text { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum ContentType2
    {
        [System.Runtime.Serialization.EnumMember(Value = @"application/json")]
        Application_json = 0,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum ContentType3
    {
        [System.Runtime.Serialization.EnumMember(Value = @"application/json")]
        Application_json = 0,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Response 
    {
        [Newtonsoft.Json.JsonProperty("text", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Text5 Text { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Response2 
    {
        /// <summary>Object containing your requested aggregations.</summary>
        [Newtonsoft.Json.JsonProperty("aggregations", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Aggregations6 Aggregations { get; set; }
    
        /// <summary>Object containing your requested comparisons.</summary>
        [Newtonsoft.Json.JsonProperty("comparisons", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Comparisons6 Comparisons { get; set; }
    
        [Newtonsoft.Json.JsonProperty("document", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Document3 Document { get; set; }
    
        /// <summary>Object containing your requested results.</summary>
        [Newtonsoft.Json.JsonProperty("results", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Results6 Results { get; set; }
    
        [Newtonsoft.Json.JsonProperty("text", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Text6 Text { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Aggregations 
    {
        /// <summary>Which bins to return in addition to the percentile.</summary>
        [Newtonsoft.Json.JsonProperty("bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        public System.Collections.Generic.ICollection<Bins> Bins { get; set; }
    
        /// <summary>Name of the aggregation. If this is a custom aggregation you can get the name from your sales contact.</summary>
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; }
    
        /// <summary>Whether to return the weighted sum in addition to the percentile rank.</summary>
        [Newtonsoft.Json.JsonProperty("weighted_sum", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Weighted_sum { get; set; } = false;
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Audio 
    {
        /// <summary>The audio you want to analyze as base64 string.</summary>
        [Newtonsoft.Json.JsonProperty("content", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public byte[] Content { get; set; }
    
        /// <summary>The 'reference' has to match your document type to yield optimal prediction results. If your document type is not represented in the list of available types, either choose a type closely related to your document type or select 'default'. We are always interested in adding new document types, thus, if you require a specific document type that is not yet available, feel free to contact us.
        /// 
        /// The types below are currently available for the languages indicated after the type name.
        /// * **email** (en/de) - This type is intended for any kind of email.
        /// * **job_ad_brief** (de) - This type is intended for brief job ads that only contain the most important information and do not describe the job in detail.
        /// * **job_ad** (de) - This type is intended for job ads published by companies and institutions.
        /// * **marketing_brochure** (en/de) - This type is intended for brochures marketing companies, products, initiatives, and similar topics.
        /// * **marketing_flyer** (en/de) - This type is intended for flyers on various topics. Information is conveyed in little detail.
        /// * **marketing_magazine** (de) - This type is intended for magazines marketing companies, products, initiatives, and similar topics. Information is provided in detail.
        /// * **marketing_newsletter** (de) - This type is intended for marketing newsletters from companies and institutions on various topics.
        /// * **marketing** (de) - Use this type for marketing documents that do not have a suitable match with any of the marketing types above.
        /// * **presentation_business** (en) - This type is intended for verbal presentations of top managers concerning the annual result and developments in their organization. The documents may contain texts of multiple speakers referring to developments concerning their domains, e.g. CEO and CFO.
        /// * **press_release** (en/de) - This type is intended for press releases from companies and institutions on various topics.
        /// * **qa_financial** (en) - This type is intended for the Q&amp;A section of analyst calls.
        /// * **radio_report** (de) - This type is intended for radio reports concerning various topics.
        /// * **report_business** (en/de) - This type is intended for annual and quarterly reports of companies.
        /// * **survey** (de) - This type is intended for evaluations from customers and employees.
        /// * **default** (en/de) - Use this type if you cannot find a more suitable type above.</summary>
        [Newtonsoft.Json.JsonProperty("reference", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public AudioReference Reference { get; set; }
    
        /// <summary>Type of the audio file.</summary>
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public AudioType Type { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Comparisons 
    {
        /// <summary>A custom ID defined by you that is used to identify the comparison in the response object. This ID needs to be unique within the same request but can be reused for different requests.</summary>
        [Newtonsoft.Json.JsonProperty("custom_id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Custom_id { get; set; }
    
        /// <summary>Array of the results to compare. These can be *results* and *aggregations*.</summary>
        [Newtonsoft.Json.JsonProperty("names", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.MinLength(2)]
        public System.Collections.Generic.ICollection<string> Names { get; set; } = new System.Collections.ObjectModel.Collection<string>();
    
        /// <summary>Whether to return the ranking of results in addition to the top result.</summary>
        [Newtonsoft.Json.JsonProperty("ranking", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Ranking { get; set; } = false;
    
        /// <summary>Whether to return the ratio of each result in comparison to the other results.</summary>
        [Newtonsoft.Json.JsonProperty("ratios", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Ratios { get; set; } = false;
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Results 
    {
        /// <summary>Which bins to return in addition to the percentile.</summary>
        [Newtonsoft.Json.JsonProperty("bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        public System.Collections.Generic.ICollection<Bins2> Bins { get; set; }
    
        /// <summary>Name of the requested result.</summary>
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ResultsName Name { get; set; }
    
        /// <summary>Whether to return patterns for the requested result or not.</summary>
        [Newtonsoft.Json.JsonProperty("patterns", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Patterns { get; set; } = false;
    
        /// <summary>Whether to return the score in addition to the percentile rank.</summary>
        [Newtonsoft.Json.JsonProperty("score", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Score { get; set; } = false;
    
        /// <summary>(preview) How many selected patterns to return for the requested result.</summary>
        [Newtonsoft.Json.JsonProperty("selected_patterns", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0, 25)]
        public int Selected_patterns { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Content_audioReference
    {
        [System.Runtime.Serialization.EnumMember(Value = @"email")]
        Email = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"job_ad_brief")]
        Job_ad_brief = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"job_ad")]
        Job_ad = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_brochure")]
        Marketing_brochure = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_flyer")]
        Marketing_flyer = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_magazine")]
        Marketing_magazine = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_newsletter")]
        Marketing_newsletter = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing")]
        Marketing = 7,
    
        [System.Runtime.Serialization.EnumMember(Value = @"presentation_business")]
        Presentation_business = 8,
    
        [System.Runtime.Serialization.EnumMember(Value = @"press_release")]
        Press_release = 9,
    
        [System.Runtime.Serialization.EnumMember(Value = @"qa_financial")]
        Qa_financial = 10,
    
        [System.Runtime.Serialization.EnumMember(Value = @"radio_report")]
        Radio_report = 11,
    
        [System.Runtime.Serialization.EnumMember(Value = @"report_business")]
        Report_business = 12,
    
        [System.Runtime.Serialization.EnumMember(Value = @"survey")]
        Survey = 13,
    
        [System.Runtime.Serialization.EnumMember(Value = @"default")]
        Default = 14,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Content_audioType
    {
        [System.Runtime.Serialization.EnumMember(Value = @"mp3")]
        Mp3 = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"wav")]
        Wav = 1,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Content_textReference
    {
        [System.Runtime.Serialization.EnumMember(Value = @"email")]
        Email = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"job_ad_brief")]
        Job_ad_brief = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"job_ad")]
        Job_ad = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_brochure")]
        Marketing_brochure = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_flyer")]
        Marketing_flyer = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_magazine")]
        Marketing_magazine = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_newsletter")]
        Marketing_newsletter = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing")]
        Marketing = 7,
    
        [System.Runtime.Serialization.EnumMember(Value = @"presentation_business")]
        Presentation_business = 8,
    
        [System.Runtime.Serialization.EnumMember(Value = @"press_release")]
        Press_release = 9,
    
        [System.Runtime.Serialization.EnumMember(Value = @"qa_financial")]
        Qa_financial = 10,
    
        [System.Runtime.Serialization.EnumMember(Value = @"radio_report")]
        Radio_report = 11,
    
        [System.Runtime.Serialization.EnumMember(Value = @"report_business")]
        Report_business = 12,
    
        [System.Runtime.Serialization.EnumMember(Value = @"survey")]
        Survey = 13,
    
        [System.Runtime.Serialization.EnumMember(Value = @"default")]
        Default = 14,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Content_textType
    {
        [System.Runtime.Serialization.EnumMember(Value = @"string")]
        String = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"docx")]
        Docx = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"pdf")]
        Pdf = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Output_audios_audioReference
    {
        [System.Runtime.Serialization.EnumMember(Value = @"email")]
        Email = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"job_ad_brief")]
        Job_ad_brief = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"job_ad")]
        Job_ad = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_brochure")]
        Marketing_brochure = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_flyer")]
        Marketing_flyer = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_magazine")]
        Marketing_magazine = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_newsletter")]
        Marketing_newsletter = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing")]
        Marketing = 7,
    
        [System.Runtime.Serialization.EnumMember(Value = @"presentation_business")]
        Presentation_business = 8,
    
        [System.Runtime.Serialization.EnumMember(Value = @"press_release")]
        Press_release = 9,
    
        [System.Runtime.Serialization.EnumMember(Value = @"qa_financial")]
        Qa_financial = 10,
    
        [System.Runtime.Serialization.EnumMember(Value = @"radio_report")]
        Radio_report = 11,
    
        [System.Runtime.Serialization.EnumMember(Value = @"report_business")]
        Report_business = 12,
    
        [System.Runtime.Serialization.EnumMember(Value = @"survey")]
        Survey = 13,
    
        [System.Runtime.Serialization.EnumMember(Value = @"default")]
        Default = 14,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Output_audios_audioState
    {
        [System.Runtime.Serialization.EnumMember(Value = @"created")]
        Created = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"analyzing")]
        Analyzing = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"finished")]
        Finished = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"failed")]
        Failed = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"delete")]
        Delete = 4,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Output_audios_audioType
    {
        [System.Runtime.Serialization.EnumMember(Value = @"mp3")]
        Mp3 = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"wav")]
        Wav = 1,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Aggregations2 
    {
        [Newtonsoft.Json.JsonProperty("aggregation_name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Aggregation_name Aggregation_name { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other requested aggregations...", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Other_requested_aggregations Other_requested_aggregations { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Audio2 
    {
        /// <summary>Time of audio creation.</summary>
        [Newtonsoft.Json.JsonProperty("created_at", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset Created_at { get; set; }
    
        /// <summary>ID of the audio.</summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Guid Id { get; set; }
    
        [Newtonsoft.Json.JsonProperty("reference", Required = Newtonsoft.Json.Required.Always)]
        public Audio2Reference Reference { get; set; }
    
        /// <summary>Current state of the audio processing.</summary>
        [Newtonsoft.Json.JsonProperty("state", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Audio2State State { get; set; }
    
        /// <summary>Type of the audio file.</summary>
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Audio2Type Type { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Comparisons2 
    {
        [Newtonsoft.Json.JsonProperty("other requested comparisons...", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Other_requested_comparisons Other_requested_comparisons { get; set; }
    
        [Newtonsoft.Json.JsonProperty("your_custom_id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Your_custom_id Your_custom_id { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Document 
    {
        /// <summary>Length of the audio file in seconds.</summary>
        [Newtonsoft.Json.JsonProperty("audio_length", Required = Newtonsoft.Json.Required.Always)]
        public int Audio_length { get; set; }
    
        /// <summary>Length of the audio transcript in characters.</summary>
        [Newtonsoft.Json.JsonProperty("transcript_length", Required = Newtonsoft.Json.Required.Always)]
        public int Transcript_length { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Results2 
    {
        /// <summary>The result object stores the generated percentiles for all requested results and, if requested, important text segments.</summary>
        [Newtonsoft.Json.JsonProperty("optimistic", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Optimistic Optimistic { get; set; }
    
        /// <summary>The result object stores the generated percentiles for all requested results and, if requested, important text segments.</summary>
        [Newtonsoft.Json.JsonProperty("other requested results...", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Other_requested_results Other_requested_results { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Aggregations3 
    {
        [Newtonsoft.Json.JsonProperty("aggregation_name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Aggregation_name2 Aggregation_name { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other requested aggregations...", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Other_requested_aggregations2 Other_requested_aggregations { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Comparisons3 
    {
        [Newtonsoft.Json.JsonProperty("other requested comparisons...", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Other_requested_comparisons2 Other_requested_comparisons { get; set; }
    
        [Newtonsoft.Json.JsonProperty("your_custom_id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Your_custom_id2 Your_custom_id { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Document2 
    {
        /// <summary>Return document chars.</summary>
        [Newtonsoft.Json.JsonProperty("chars", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<object> Chars { get; set; }
    
        /// <summary>Length of the text document parsed in characters.</summary>
        [Newtonsoft.Json.JsonProperty("text_parsed_length", Required = Newtonsoft.Json.Required.Always)]
        public int Text_parsed_length { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Results3 
    {
        /// <summary>The result object stores the generated percentiles for all requested results and, if requested, important text segments.</summary>
        [Newtonsoft.Json.JsonProperty("optimistic", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Optimistic2 Optimistic { get; set; }
    
        /// <summary>The result object stores the generated percentiles for all requested results and, if requested, important text segments.</summary>
        [Newtonsoft.Json.JsonProperty("other requested results...", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Other_requested_results2 Other_requested_results { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Text 
    {
        /// <summary>Time of text document creation.</summary>
        [Newtonsoft.Json.JsonProperty("created_at", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset Created_at { get; set; }
    
        /// <summary>ID of the text document.</summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Guid Id { get; set; }
    
        [Newtonsoft.Json.JsonProperty("reference", Required = Newtonsoft.Json.Required.Always)]
        public TextReference Reference { get; set; }
    
        /// <summary>State of the text document processing.</summary>
        [Newtonsoft.Json.JsonProperty("state", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public TextState State { get; set; }
    
        /// <summary>Type of the text document file.</summary>
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.AllowNull)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public TextType? Type { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Audio3 
    {
        /// <summary>Time of audio creation.</summary>
        [Newtonsoft.Json.JsonProperty("created_at", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset Created_at { get; set; }
    
        /// <summary>ID of the audio.</summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Guid Id { get; set; }
    
        [Newtonsoft.Json.JsonProperty("reference", Required = Newtonsoft.Json.Required.Always)]
        public Audio3Reference Reference { get; set; }
    
        /// <summary>Current state of the audio processing.</summary>
        [Newtonsoft.Json.JsonProperty("state", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Audio3State State { get; set; }
    
        /// <summary>Type of the audio file.</summary>
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Audio3Type Type { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Text2 
    {
        /// <summary>Time of text document creation.</summary>
        [Newtonsoft.Json.JsonProperty("created_at", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset Created_at { get; set; }
    
        /// <summary>ID of the text document.</summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Guid Id { get; set; }
    
        [Newtonsoft.Json.JsonProperty("reference", Required = Newtonsoft.Json.Required.Always)]
        public Text2Reference Reference { get; set; }
    
        /// <summary>State of the text document processing.</summary>
        [Newtonsoft.Json.JsonProperty("state", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Text2State State { get; set; }
    
        /// <summary>Type of the text document file.</summary>
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.AllowNull)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Text2Type? Type { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Output_texts_textReference
    {
        [System.Runtime.Serialization.EnumMember(Value = @"email")]
        Email = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"job_ad_brief")]
        Job_ad_brief = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"job_ad")]
        Job_ad = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_brochure")]
        Marketing_brochure = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_flyer")]
        Marketing_flyer = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_magazine")]
        Marketing_magazine = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_newsletter")]
        Marketing_newsletter = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing")]
        Marketing = 7,
    
        [System.Runtime.Serialization.EnumMember(Value = @"presentation_business")]
        Presentation_business = 8,
    
        [System.Runtime.Serialization.EnumMember(Value = @"press_release")]
        Press_release = 9,
    
        [System.Runtime.Serialization.EnumMember(Value = @"qa_financial")]
        Qa_financial = 10,
    
        [System.Runtime.Serialization.EnumMember(Value = @"radio_report")]
        Radio_report = 11,
    
        [System.Runtime.Serialization.EnumMember(Value = @"report_business")]
        Report_business = 12,
    
        [System.Runtime.Serialization.EnumMember(Value = @"survey")]
        Survey = 13,
    
        [System.Runtime.Serialization.EnumMember(Value = @"default")]
        Default = 14,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Output_texts_textState
    {
        [System.Runtime.Serialization.EnumMember(Value = @"created")]
        Created = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"analyzing")]
        Analyzing = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"finished")]
        Finished = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"failed")]
        Failed = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"delete")]
        Delete = 4,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Output_texts_textType
    {
        [System.Runtime.Serialization.EnumMember(Value = @"string")]
        String = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"docx")]
        Docx = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"pdf")]
        Pdf = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Aggregations4 
    {
        /// <summary>Which bins to return in addition to the percentile.</summary>
        [Newtonsoft.Json.JsonProperty("bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        public System.Collections.Generic.ICollection<Bins3> Bins { get; set; }
    
        /// <summary>Name of the aggregation. If this is a custom aggregation you can get the name from your sales contact.</summary>
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; }
    
        /// <summary>Whether to return the weighted sum in addition to the percentile rank.</summary>
        [Newtonsoft.Json.JsonProperty("weighted_sum", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Weighted_sum { get; set; } = false;
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Comparisons4 
    {
        /// <summary>A custom ID defined by you that is used to identify the comparison in the response object. This ID needs to be unique within the same request but can be reused for different requests.</summary>
        [Newtonsoft.Json.JsonProperty("custom_id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Custom_id { get; set; }
    
        /// <summary>Array of the results to compare. These can be *results* and *aggregations*.</summary>
        [Newtonsoft.Json.JsonProperty("names", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.MinLength(2)]
        public System.Collections.Generic.ICollection<string> Names { get; set; } = new System.Collections.ObjectModel.Collection<string>();
    
        /// <summary>Whether to return the ranking of results in addition to the top result.</summary>
        [Newtonsoft.Json.JsonProperty("ranking", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Ranking { get; set; } = false;
    
        /// <summary>Whether to return the ratio of each result in comparison to the other results.</summary>
        [Newtonsoft.Json.JsonProperty("ratios", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Ratios { get; set; } = false;
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Results4 
    {
        /// <summary>Which bins to return in addition to the percentile.</summary>
        [Newtonsoft.Json.JsonProperty("bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        public System.Collections.Generic.ICollection<Bins4> Bins { get; set; }
    
        /// <summary>Name of the requested result.</summary>
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Results4Name Name { get; set; }
    
        /// <summary>Whether to return patterns for the requested result or not.</summary>
        [Newtonsoft.Json.JsonProperty("patterns", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Patterns { get; set; } = false;
    
        /// <summary>Whether to return the score in addition to the percentile rank.</summary>
        [Newtonsoft.Json.JsonProperty("score", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Score { get; set; } = false;
    
        /// <summary>(preview) How many selected patterns to return for the requested result.</summary>
        [Newtonsoft.Json.JsonProperty("selected_patterns", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0, 25)]
        public int Selected_patterns { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Text3 
    {
        /// <summary>The text document you want to analyze. Depending on the "type" you need to send the content base64 encoded or not. For "type" string the content needs to be sent as plain text. For all other "type"`s e.g. "pdf" or "docx" needs to be sent the content as base64 encoded string.</summary>
        [Newtonsoft.Json.JsonProperty("content", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Content { get; set; }
    
        /// <summary>The 'reference' has to match your document type to yield optimal prediction results. If your document type is not represented in the list of available types, either choose a type closely related to your document type or select 'default'. We are always interested in adding new document types, thus, if you require a specific document type that is not yet available, feel free to contact us.
        /// 
        /// The types below are currently available for the languages indicated after the type name.
        /// * **email** (en/de) - This type is intended for any kind of email.
        /// * **job_ad_brief** (de) - This type is intended for brief job ads that only contain the most important information and do not describe the job in detail.
        /// * **job_ad** (de) - This type is intended for job ads published by companies and institutions.
        /// * **marketing_brochure** (en/de) - This type is intended for brochures marketing companies, products, initiatives, and similar topics.
        /// * **marketing_flyer** (en/de) - This type is intended for flyers on various topics. Information is conveyed in little detail.
        /// * **marketing_magazine** (de) - This type is intended for magazines marketing companies, products, initiatives, and similar topics. Information is provided in detail.
        /// * **marketing_newsletter** (de) - This type is intended for marketing newsletters from companies and institutions on various topics.
        /// * **marketing** (de) - Use this type for marketing documents that do not have a suitable match with any of the marketing types above.
        /// * **presentation_business** (en) - This type is intended for verbal presentations of top managers concerning the annual result and developments in their organization. The documents may contain texts of multiple speakers referring to developments concerning their domains, e.g. CEO and CFO.
        /// * **press_release** (en/de) - This type is intended for press releases from companies and institutions on various topics.
        /// * **qa_financial** (en) - This type is intended for the Q&amp;A section of analyst calls.
        /// * **radio_report** (de) - This type is intended for radio reports concerning various topics.
        /// * **report_business** (en/de) - This type is intended for annual and quarterly reports of companies.
        /// * **survey** (de) - This type is intended for evaluations from customers and employees.
        /// * **default** (en/de) - Use this type if you cannot find a more suitable type above.</summary>
        [Newtonsoft.Json.JsonProperty("reference", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Text3Reference Reference { get; set; }
    
        /// <summary>Type of the text document file.</summary>
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Text3Type Type { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Aggregations5 
    {
        /// <summary>Which bins to return in addition to the percentile.</summary>
        [Newtonsoft.Json.JsonProperty("bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        public System.Collections.Generic.ICollection<Bins5> Bins { get; set; }
    
        /// <summary>Name of the aggregation. If this is a custom aggregation you can get the name from your sales contact.</summary>
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; }
    
        /// <summary>Whether to return the weighted sum in addition to the percentile rank.</summary>
        [Newtonsoft.Json.JsonProperty("weighted_sum", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Weighted_sum { get; set; } = false;
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Comparisons5 
    {
        /// <summary>A custom ID defined by you that is used to identify the comparison in the response object. This ID needs to be unique within the same request but can be reused for different requests.</summary>
        [Newtonsoft.Json.JsonProperty("custom_id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Custom_id { get; set; }
    
        /// <summary>Array of the results to compare. These can be *results* and *aggregations*.</summary>
        [Newtonsoft.Json.JsonProperty("names", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.MinLength(2)]
        public System.Collections.Generic.ICollection<string> Names { get; set; } = new System.Collections.ObjectModel.Collection<string>();
    
        /// <summary>Whether to return the ranking of results in addition to the top result.</summary>
        [Newtonsoft.Json.JsonProperty("ranking", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Ranking { get; set; } = false;
    
        /// <summary>Whether to return the ratio of each result in comparison to the other results.</summary>
        [Newtonsoft.Json.JsonProperty("ratios", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Ratios { get; set; } = false;
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Results5 
    {
        /// <summary>Which bins to return in addition to the percentile.</summary>
        [Newtonsoft.Json.JsonProperty("bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        public System.Collections.Generic.ICollection<Bins6> Bins { get; set; }
    
        /// <summary>Name of the requested result.</summary>
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Results5Name Name { get; set; }
    
        /// <summary>Whether to return patterns for the requested result or not.</summary>
        [Newtonsoft.Json.JsonProperty("patterns", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Patterns { get; set; } = false;
    
        /// <summary>Whether to return the score in addition to the percentile rank.</summary>
        [Newtonsoft.Json.JsonProperty("score", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Score { get; set; } = false;
    
        /// <summary>(preview) How many selected patterns to return for the requested result.</summary>
        [Newtonsoft.Json.JsonProperty("selected_patterns", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0, 25)]
        public int Selected_patterns { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Text4 
    {
        /// <summary>The text document you want to analyze. Depending on the "type" you need to send the content base64 encoded or not. For "type" string the content needs to be sent as plain text. For all other "type"`s e.g. "pdf" or "docx" needs to be sent the content as base64 encoded string.</summary>
        [Newtonsoft.Json.JsonProperty("content", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Content { get; set; }
    
        /// <summary>The 'reference' has to match your document type to yield optimal prediction results. If your document type is not represented in the list of available types, either choose a type closely related to your document type or select 'default'. We are always interested in adding new document types, thus, if you require a specific document type that is not yet available, feel free to contact us.
        /// 
        /// The types below are currently available for the languages indicated after the type name.
        /// * **email** (en/de) - This type is intended for any kind of email.
        /// * **job_ad_brief** (de) - This type is intended for brief job ads that only contain the most important information and do not describe the job in detail.
        /// * **job_ad** (de) - This type is intended for job ads published by companies and institutions.
        /// * **marketing_brochure** (en/de) - This type is intended for brochures marketing companies, products, initiatives, and similar topics.
        /// * **marketing_flyer** (en/de) - This type is intended for flyers on various topics. Information is conveyed in little detail.
        /// * **marketing_magazine** (de) - This type is intended for magazines marketing companies, products, initiatives, and similar topics. Information is provided in detail.
        /// * **marketing_newsletter** (de) - This type is intended for marketing newsletters from companies and institutions on various topics.
        /// * **marketing** (de) - Use this type for marketing documents that do not have a suitable match with any of the marketing types above.
        /// * **presentation_business** (en) - This type is intended for verbal presentations of top managers concerning the annual result and developments in their organization. The documents may contain texts of multiple speakers referring to developments concerning their domains, e.g. CEO and CFO.
        /// * **press_release** (en/de) - This type is intended for press releases from companies and institutions on various topics.
        /// * **qa_financial** (en) - This type is intended for the Q&amp;A section of analyst calls.
        /// * **radio_report** (de) - This type is intended for radio reports concerning various topics.
        /// * **report_business** (en/de) - This type is intended for annual and quarterly reports of companies.
        /// * **survey** (de) - This type is intended for evaluations from customers and employees.
        /// * **default** (en/de) - Use this type if you cannot find a more suitable type above.</summary>
        [Newtonsoft.Json.JsonProperty("reference", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Text4Reference Reference { get; set; }
    
        /// <summary>Type of the text document file.</summary>
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Text4Type Type { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Text5 
    {
        /// <summary>Time of text document creation.</summary>
        [Newtonsoft.Json.JsonProperty("created_at", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset Created_at { get; set; }
    
        /// <summary>ID of the text document.</summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Guid Id { get; set; }
    
        [Newtonsoft.Json.JsonProperty("reference", Required = Newtonsoft.Json.Required.Always)]
        public Text5Reference Reference { get; set; }
    
        /// <summary>State of the text document processing.</summary>
        [Newtonsoft.Json.JsonProperty("state", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Text5State State { get; set; }
    
        /// <summary>Type of the text document file.</summary>
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.AllowNull)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Text5Type? Type { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Aggregations6 
    {
        [Newtonsoft.Json.JsonProperty("aggregation_name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Aggregation_name3 Aggregation_name { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other requested aggregations...", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Other_requested_aggregations3 Other_requested_aggregations { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Comparisons6 
    {
        [Newtonsoft.Json.JsonProperty("other requested comparisons...", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Other_requested_comparisons3 Other_requested_comparisons { get; set; }
    
        [Newtonsoft.Json.JsonProperty("your_custom_id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Your_custom_id3 Your_custom_id { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Document3 
    {
        /// <summary>Return document chars.</summary>
        [Newtonsoft.Json.JsonProperty("chars", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<object> Chars { get; set; }
    
        /// <summary>Length of the text document parsed in characters.</summary>
        [Newtonsoft.Json.JsonProperty("text_parsed_length", Required = Newtonsoft.Json.Required.Always)]
        public int Text_parsed_length { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Results6 
    {
        /// <summary>The result object stores the generated percentiles for all requested results and, if requested, important text segments.</summary>
        [Newtonsoft.Json.JsonProperty("optimistic", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Optimistic3 Optimistic { get; set; }
    
        /// <summary>The result object stores the generated percentiles for all requested results and, if requested, important text segments.</summary>
        [Newtonsoft.Json.JsonProperty("other requested results...", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Other_requested_results3 Other_requested_results { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Text6 
    {
        /// <summary>Time of text document creation.</summary>
        [Newtonsoft.Json.JsonProperty("created_at", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset Created_at { get; set; }
    
        /// <summary>ID of the text document.</summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Guid Id { get; set; }
    
        [Newtonsoft.Json.JsonProperty("reference", Required = Newtonsoft.Json.Required.Always)]
        public Text6Reference Reference { get; set; }
    
        /// <summary>State of the text document processing.</summary>
        [Newtonsoft.Json.JsonProperty("state", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Text6State State { get; set; }
    
        /// <summary>Type of the text document file.</summary>
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.AllowNull)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Text6Type? Type { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Bins
    {
        _2 = 2,
    
        _3 = 3,
    
        _4 = 4,
    
        _5 = 5,
    
        _6 = 6,
    
        _7 = 7,
    
        _8 = 8,
    
        _9 = 9,
    
        _10 = 10,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum AudioReference
    {
        [System.Runtime.Serialization.EnumMember(Value = @"email")]
        Email = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"job_ad_brief")]
        Job_ad_brief = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"job_ad")]
        Job_ad = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_brochure")]
        Marketing_brochure = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_flyer")]
        Marketing_flyer = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_magazine")]
        Marketing_magazine = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_newsletter")]
        Marketing_newsletter = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing")]
        Marketing = 7,
    
        [System.Runtime.Serialization.EnumMember(Value = @"presentation_business")]
        Presentation_business = 8,
    
        [System.Runtime.Serialization.EnumMember(Value = @"press_release")]
        Press_release = 9,
    
        [System.Runtime.Serialization.EnumMember(Value = @"qa_financial")]
        Qa_financial = 10,
    
        [System.Runtime.Serialization.EnumMember(Value = @"radio_report")]
        Radio_report = 11,
    
        [System.Runtime.Serialization.EnumMember(Value = @"report_business")]
        Report_business = 12,
    
        [System.Runtime.Serialization.EnumMember(Value = @"survey")]
        Survey = 13,
    
        [System.Runtime.Serialization.EnumMember(Value = @"default")]
        Default = 14,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum AudioType
    {
        [System.Runtime.Serialization.EnumMember(Value = @"mp3")]
        Mp3 = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"wav")]
        Wav = 1,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Bins2
    {
        _2 = 2,
    
        _3 = 3,
    
        _4 = 4,
    
        _5 = 5,
    
        _6 = 6,
    
        _7 = 7,
    
        _8 = 8,
    
        _9 = 9,
    
        _10 = 10,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum ResultsName
    {
        [System.Runtime.Serialization.EnumMember(Value = @"competitive")]
        Competitive = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"composed")]
        Composed = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"cooperative")]
        Cooperative = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"directing")]
        Directing = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"empathic")]
        Empathic = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"formal")]
        Formal = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = @"friendly")]
        Friendly = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = @"goal_oriented")]
        Goal_oriented = 7,
    
        [System.Runtime.Serialization.EnumMember(Value = @"innovative")]
        Innovative = 8,
    
        [System.Runtime.Serialization.EnumMember(Value = @"inspiring")]
        Inspiring = 9,
    
        [System.Runtime.Serialization.EnumMember(Value = @"intellectual")]
        Intellectual = 10,
    
        [System.Runtime.Serialization.EnumMember(Value = @"motivating")]
        Motivating = 11,
    
        [System.Runtime.Serialization.EnumMember(Value = @"optimistic")]
        Optimistic = 12,
    
        [System.Runtime.Serialization.EnumMember(Value = @"positive")]
        Positive = 13,
    
        [System.Runtime.Serialization.EnumMember(Value = @"professional")]
        Professional = 14,
    
        [System.Runtime.Serialization.EnumMember(Value = @"reliable")]
        Reliable = 15,
    
        [System.Runtime.Serialization.EnumMember(Value = @"self_confident")]
        Self_confident = 16,
    
        [System.Runtime.Serialization.EnumMember(Value = @"structured")]
        Structured = 17,
    
        [System.Runtime.Serialization.EnumMember(Value = @"supportive")]
        Supportive = 18,
    
        [System.Runtime.Serialization.EnumMember(Value = @"venturing")]
        Venturing = 19,
    
        [System.Runtime.Serialization.EnumMember(Value = @"visionary")]
        Visionary = 20,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Aggregation_name 
    {
        /// <summary>Percentile rank of the aggregation ranging from 0 to 100. The value describes what percentage of texts of the selected document type reference had lower weighted sum than the given text.</summary>
        [Newtonsoft.Json.JsonProperty("percentile", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Range(0, 100)]
        public int Percentile { get; set; }
    
        /// <summary>An object containing the percentile rank discretized to the requested bins.</summary>
        [Newtonsoft.Json.JsonProperty("percentile_bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins Percentile_bins { get; set; }
    
        /// <summary>Weighted sum of the results to be aggregated.</summary>
        [Newtonsoft.Json.JsonProperty("weighted_sum", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0, 100)]
        public double Weighted_sum { get; set; }
    
        /// <summary>An object containing the weighted_sum discretized to the requested bins.</summary>
        [Newtonsoft.Json.JsonProperty("weighted_sum_bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Weighted_sum_bins Weighted_sum_bins { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Other_requested_aggregations 
    {
        /// <summary>Percentile rank of the aggregation ranging from 0 to 100. The value describes what percentage of texts of the selected document type reference had lower weighted sum than the given text.</summary>
        [Newtonsoft.Json.JsonProperty("percentile", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Range(0, 100)]
        public int Percentile { get; set; }
    
        /// <summary>An object containing the percentile rank discretized to the requested bins.</summary>
        [Newtonsoft.Json.JsonProperty("percentile_bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins2 Percentile_bins { get; set; }
    
        /// <summary>Weighted sum of the results to be aggregated.</summary>
        [Newtonsoft.Json.JsonProperty("weighted_sum", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0, 100)]
        public double Weighted_sum { get; set; }
    
        /// <summary>An object containing the weighted_sum discretized to the requested bins.</summary>
        [Newtonsoft.Json.JsonProperty("weighted_sum_bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Weighted_sum_bins2 Weighted_sum_bins { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Audio2Reference
    {
        [System.Runtime.Serialization.EnumMember(Value = @"email")]
        Email = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"job_ad_brief")]
        Job_ad_brief = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"job_ad")]
        Job_ad = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_brochure")]
        Marketing_brochure = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_flyer")]
        Marketing_flyer = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_magazine")]
        Marketing_magazine = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_newsletter")]
        Marketing_newsletter = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing")]
        Marketing = 7,
    
        [System.Runtime.Serialization.EnumMember(Value = @"presentation_business")]
        Presentation_business = 8,
    
        [System.Runtime.Serialization.EnumMember(Value = @"press_release")]
        Press_release = 9,
    
        [System.Runtime.Serialization.EnumMember(Value = @"qa_financial")]
        Qa_financial = 10,
    
        [System.Runtime.Serialization.EnumMember(Value = @"radio_report")]
        Radio_report = 11,
    
        [System.Runtime.Serialization.EnumMember(Value = @"report_business")]
        Report_business = 12,
    
        [System.Runtime.Serialization.EnumMember(Value = @"survey")]
        Survey = 13,
    
        [System.Runtime.Serialization.EnumMember(Value = @"default")]
        Default = 14,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Audio2State
    {
        [System.Runtime.Serialization.EnumMember(Value = @"created")]
        Created = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"analyzing")]
        Analyzing = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"finished")]
        Finished = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"failed")]
        Failed = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"delete")]
        Delete = 4,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Audio2Type
    {
        [System.Runtime.Serialization.EnumMember(Value = @"mp3")]
        Mp3 = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"wav")]
        Wav = 1,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Other_requested_comparisons 
    {
        /// <summary>List containing a ranking for the results and aggregations in the comparison group.</summary>
        [Newtonsoft.Json.JsonProperty("ranking", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Ranking> Ranking { get; set; }
    
        /// <summary>Top result or aggregation in the comparison group.</summary>
        [Newtonsoft.Json.JsonProperty("top", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Top { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Your_custom_id 
    {
        /// <summary>List containing a ranking for the results and aggregations in the comparison group.</summary>
        [Newtonsoft.Json.JsonProperty("ranking", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Ranking2> Ranking { get; set; }
    
        /// <summary>Top result or aggregation in the comparison group.</summary>
        [Newtonsoft.Json.JsonProperty("top", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Top { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Optimistic 
    {
        /// <summary>This list of matched 'patterns' holds important text segments which have either a negative or a positive impact on the given result.</summary>
        [Newtonsoft.Json.JsonProperty("patterns", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Patterns> Patterns { get; set; }
    
        /// <summary>Percentile rank of the result ranging from 0 to 100. The value describes what percentage of texts of the selected document type reference had lower scores than the given text.</summary>
        [Newtonsoft.Json.JsonProperty("percentile", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Range(0, 100)]
        public int Percentile { get; set; }
    
        /// <summary>An object containing the percentile rank discretized to the requested bins.</summary>
        [Newtonsoft.Json.JsonProperty("percentile_bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins3 Percentile_bins { get; set; }
    
        /// <summary>'score' of the result ranging from 0.0 to 1.0. The value describes to which degree the given text matches the specific result.</summary>
        [Newtonsoft.Json.JsonProperty("score", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0, 1)]
        public double Score { get; set; }
    
        /// <summary>This object of 'selected patterns' holds the most important text segments which have either a negative or a positive impact on the given result. Different forms of the same text are aggregated and output as a single text. For example, "allowed", "allows", and "allow" might all be subsumed under an output of "allow". Numbers are aggregated under the language specific special tags [NUMBERS]/[ZAHLEN].</summary>
        [Newtonsoft.Json.JsonProperty("selected_patterns", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public object Selected_patterns { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Other_requested_results 
    {
        /// <summary>This list of matched 'patterns' holds important text segments which have either a negative or a positive impact on the given result.</summary>
        [Newtonsoft.Json.JsonProperty("patterns", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Patterns2> Patterns { get; set; }
    
        /// <summary>Percentile rank of the result ranging from 0 to 100. The value describes what percentage of texts of the selected document type reference had lower scores than the given text.</summary>
        [Newtonsoft.Json.JsonProperty("percentile", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Range(0, 100)]
        public int Percentile { get; set; }
    
        /// <summary>An object containing the percentile rank discretized to the requested bins.</summary>
        [Newtonsoft.Json.JsonProperty("percentile_bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins4 Percentile_bins { get; set; }
    
        /// <summary>'score' of the result ranging from 0.0 to 1.0. The value describes to which degree the given text matches the specific result.</summary>
        [Newtonsoft.Json.JsonProperty("score", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0, 1)]
        public double Score { get; set; }
    
        /// <summary>This object of 'selected patterns' holds the most important text segments which have either a negative or a positive impact on the given result. Different forms of the same text are aggregated and output as a single text. For example, "allowed", "allows", and "allow" might all be subsumed under an output of "allow". Numbers are aggregated under the language specific special tags [NUMBERS]/[ZAHLEN].</summary>
        [Newtonsoft.Json.JsonProperty("selected_patterns", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public object Selected_patterns { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Aggregation_name2 
    {
        /// <summary>Percentile rank of the aggregation ranging from 0 to 100. The value describes what percentage of texts of the selected document type reference had lower weighted sum than the given text.</summary>
        [Newtonsoft.Json.JsonProperty("percentile", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Range(0, 100)]
        public int Percentile { get; set; }
    
        /// <summary>An object containing the percentile rank discretized to the requested bins.</summary>
        [Newtonsoft.Json.JsonProperty("percentile_bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins5 Percentile_bins { get; set; }
    
        /// <summary>Weighted sum of the results to be aggregated.</summary>
        [Newtonsoft.Json.JsonProperty("weighted_sum", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0, 100)]
        public double Weighted_sum { get; set; }
    
        /// <summary>An object containing the weighted_sum discretized to the requested bins.</summary>
        [Newtonsoft.Json.JsonProperty("weighted_sum_bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Weighted_sum_bins3 Weighted_sum_bins { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Other_requested_aggregations2 
    {
        /// <summary>Percentile rank of the aggregation ranging from 0 to 100. The value describes what percentage of texts of the selected document type reference had lower weighted sum than the given text.</summary>
        [Newtonsoft.Json.JsonProperty("percentile", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Range(0, 100)]
        public int Percentile { get; set; }
    
        /// <summary>An object containing the percentile rank discretized to the requested bins.</summary>
        [Newtonsoft.Json.JsonProperty("percentile_bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins6 Percentile_bins { get; set; }
    
        /// <summary>Weighted sum of the results to be aggregated.</summary>
        [Newtonsoft.Json.JsonProperty("weighted_sum", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0, 100)]
        public double Weighted_sum { get; set; }
    
        /// <summary>An object containing the weighted_sum discretized to the requested bins.</summary>
        [Newtonsoft.Json.JsonProperty("weighted_sum_bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Weighted_sum_bins4 Weighted_sum_bins { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Other_requested_comparisons2 
    {
        /// <summary>List containing a ranking for the results and aggregations in the comparison group.</summary>
        [Newtonsoft.Json.JsonProperty("ranking", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Ranking3> Ranking { get; set; }
    
        /// <summary>Top result or aggregation in the comparison group.</summary>
        [Newtonsoft.Json.JsonProperty("top", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Top { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Your_custom_id2 
    {
        /// <summary>List containing a ranking for the results and aggregations in the comparison group.</summary>
        [Newtonsoft.Json.JsonProperty("ranking", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Ranking4> Ranking { get; set; }
    
        /// <summary>Top result or aggregation in the comparison group.</summary>
        [Newtonsoft.Json.JsonProperty("top", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Top { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Optimistic2 
    {
        /// <summary>This list of matched 'patterns' holds important text segments which have either a negative or a positive impact on the given result.</summary>
        [Newtonsoft.Json.JsonProperty("patterns", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Patterns3> Patterns { get; set; }
    
        /// <summary>Percentile rank of the result ranging from 0 to 100. The value describes what percentage of texts of the selected document type reference had lower scores than the given text.</summary>
        [Newtonsoft.Json.JsonProperty("percentile", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Range(0, 100)]
        public int Percentile { get; set; }
    
        /// <summary>An object containing the percentile rank discretized to the requested bins.</summary>
        [Newtonsoft.Json.JsonProperty("percentile_bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins7 Percentile_bins { get; set; }
    
        /// <summary>'score' of the result ranging from 0.0 to 1.0. The value describes to which degree the given text matches the specific result.</summary>
        [Newtonsoft.Json.JsonProperty("score", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0, 1)]
        public double Score { get; set; }
    
        /// <summary>This object of 'selected patterns' holds the most important text segments which have either a negative or a positive impact on the given result. Different forms of the same text are aggregated and output as a single text. For example, "allowed", "allows", and "allow" might all be subsumed under an output of "allow". Numbers are aggregated under the language specific special tags [NUMBERS]/[ZAHLEN].</summary>
        [Newtonsoft.Json.JsonProperty("selected_patterns", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public object Selected_patterns { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Other_requested_results2 
    {
        /// <summary>This list of matched 'patterns' holds important text segments which have either a negative or a positive impact on the given result.</summary>
        [Newtonsoft.Json.JsonProperty("patterns", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Patterns4> Patterns { get; set; }
    
        /// <summary>Percentile rank of the result ranging from 0 to 100. The value describes what percentage of texts of the selected document type reference had lower scores than the given text.</summary>
        [Newtonsoft.Json.JsonProperty("percentile", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Range(0, 100)]
        public int Percentile { get; set; }
    
        /// <summary>An object containing the percentile rank discretized to the requested bins.</summary>
        [Newtonsoft.Json.JsonProperty("percentile_bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins8 Percentile_bins { get; set; }
    
        /// <summary>'score' of the result ranging from 0.0 to 1.0. The value describes to which degree the given text matches the specific result.</summary>
        [Newtonsoft.Json.JsonProperty("score", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0, 1)]
        public double Score { get; set; }
    
        /// <summary>This object of 'selected patterns' holds the most important text segments which have either a negative or a positive impact on the given result. Different forms of the same text are aggregated and output as a single text. For example, "allowed", "allows", and "allow" might all be subsumed under an output of "allow". Numbers are aggregated under the language specific special tags [NUMBERS]/[ZAHLEN].</summary>
        [Newtonsoft.Json.JsonProperty("selected_patterns", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public object Selected_patterns { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum TextReference
    {
        [System.Runtime.Serialization.EnumMember(Value = @"email")]
        Email = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"job_ad_brief")]
        Job_ad_brief = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"job_ad")]
        Job_ad = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_brochure")]
        Marketing_brochure = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_flyer")]
        Marketing_flyer = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_magazine")]
        Marketing_magazine = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_newsletter")]
        Marketing_newsletter = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing")]
        Marketing = 7,
    
        [System.Runtime.Serialization.EnumMember(Value = @"presentation_business")]
        Presentation_business = 8,
    
        [System.Runtime.Serialization.EnumMember(Value = @"press_release")]
        Press_release = 9,
    
        [System.Runtime.Serialization.EnumMember(Value = @"qa_financial")]
        Qa_financial = 10,
    
        [System.Runtime.Serialization.EnumMember(Value = @"radio_report")]
        Radio_report = 11,
    
        [System.Runtime.Serialization.EnumMember(Value = @"report_business")]
        Report_business = 12,
    
        [System.Runtime.Serialization.EnumMember(Value = @"survey")]
        Survey = 13,
    
        [System.Runtime.Serialization.EnumMember(Value = @"default")]
        Default = 14,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum TextState
    {
        [System.Runtime.Serialization.EnumMember(Value = @"created")]
        Created = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"analyzing")]
        Analyzing = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"finished")]
        Finished = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"failed")]
        Failed = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"delete")]
        Delete = 4,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum TextType
    {
        [System.Runtime.Serialization.EnumMember(Value = @"string")]
        String = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"docx")]
        Docx = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"pdf")]
        Pdf = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Audio3Reference
    {
        [System.Runtime.Serialization.EnumMember(Value = @"email")]
        Email = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"job_ad_brief")]
        Job_ad_brief = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"job_ad")]
        Job_ad = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_brochure")]
        Marketing_brochure = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_flyer")]
        Marketing_flyer = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_magazine")]
        Marketing_magazine = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_newsletter")]
        Marketing_newsletter = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing")]
        Marketing = 7,
    
        [System.Runtime.Serialization.EnumMember(Value = @"presentation_business")]
        Presentation_business = 8,
    
        [System.Runtime.Serialization.EnumMember(Value = @"press_release")]
        Press_release = 9,
    
        [System.Runtime.Serialization.EnumMember(Value = @"qa_financial")]
        Qa_financial = 10,
    
        [System.Runtime.Serialization.EnumMember(Value = @"radio_report")]
        Radio_report = 11,
    
        [System.Runtime.Serialization.EnumMember(Value = @"report_business")]
        Report_business = 12,
    
        [System.Runtime.Serialization.EnumMember(Value = @"survey")]
        Survey = 13,
    
        [System.Runtime.Serialization.EnumMember(Value = @"default")]
        Default = 14,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Audio3State
    {
        [System.Runtime.Serialization.EnumMember(Value = @"created")]
        Created = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"analyzing")]
        Analyzing = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"finished")]
        Finished = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"failed")]
        Failed = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"delete")]
        Delete = 4,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Audio3Type
    {
        [System.Runtime.Serialization.EnumMember(Value = @"mp3")]
        Mp3 = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"wav")]
        Wav = 1,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Text2Reference
    {
        [System.Runtime.Serialization.EnumMember(Value = @"email")]
        Email = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"job_ad_brief")]
        Job_ad_brief = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"job_ad")]
        Job_ad = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_brochure")]
        Marketing_brochure = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_flyer")]
        Marketing_flyer = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_magazine")]
        Marketing_magazine = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_newsletter")]
        Marketing_newsletter = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing")]
        Marketing = 7,
    
        [System.Runtime.Serialization.EnumMember(Value = @"presentation_business")]
        Presentation_business = 8,
    
        [System.Runtime.Serialization.EnumMember(Value = @"press_release")]
        Press_release = 9,
    
        [System.Runtime.Serialization.EnumMember(Value = @"qa_financial")]
        Qa_financial = 10,
    
        [System.Runtime.Serialization.EnumMember(Value = @"radio_report")]
        Radio_report = 11,
    
        [System.Runtime.Serialization.EnumMember(Value = @"report_business")]
        Report_business = 12,
    
        [System.Runtime.Serialization.EnumMember(Value = @"survey")]
        Survey = 13,
    
        [System.Runtime.Serialization.EnumMember(Value = @"default")]
        Default = 14,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Text2State
    {
        [System.Runtime.Serialization.EnumMember(Value = @"created")]
        Created = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"analyzing")]
        Analyzing = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"finished")]
        Finished = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"failed")]
        Failed = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"delete")]
        Delete = 4,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Text2Type
    {
        [System.Runtime.Serialization.EnumMember(Value = @"string")]
        String = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"docx")]
        Docx = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"pdf")]
        Pdf = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Bins3
    {
        _2 = 2,
    
        _3 = 3,
    
        _4 = 4,
    
        _5 = 5,
    
        _6 = 6,
    
        _7 = 7,
    
        _8 = 8,
    
        _9 = 9,
    
        _10 = 10,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Bins4
    {
        _2 = 2,
    
        _3 = 3,
    
        _4 = 4,
    
        _5 = 5,
    
        _6 = 6,
    
        _7 = 7,
    
        _8 = 8,
    
        _9 = 9,
    
        _10 = 10,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Results4Name
    {
        [System.Runtime.Serialization.EnumMember(Value = @"competitive")]
        Competitive = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"composed")]
        Composed = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"cooperative")]
        Cooperative = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"directing")]
        Directing = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"empathic")]
        Empathic = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"formal")]
        Formal = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = @"friendly")]
        Friendly = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = @"goal_oriented")]
        Goal_oriented = 7,
    
        [System.Runtime.Serialization.EnumMember(Value = @"innovative")]
        Innovative = 8,
    
        [System.Runtime.Serialization.EnumMember(Value = @"inspiring")]
        Inspiring = 9,
    
        [System.Runtime.Serialization.EnumMember(Value = @"intellectual")]
        Intellectual = 10,
    
        [System.Runtime.Serialization.EnumMember(Value = @"motivating")]
        Motivating = 11,
    
        [System.Runtime.Serialization.EnumMember(Value = @"optimistic")]
        Optimistic = 12,
    
        [System.Runtime.Serialization.EnumMember(Value = @"positive")]
        Positive = 13,
    
        [System.Runtime.Serialization.EnumMember(Value = @"professional")]
        Professional = 14,
    
        [System.Runtime.Serialization.EnumMember(Value = @"reliable")]
        Reliable = 15,
    
        [System.Runtime.Serialization.EnumMember(Value = @"self_confident")]
        Self_confident = 16,
    
        [System.Runtime.Serialization.EnumMember(Value = @"structured")]
        Structured = 17,
    
        [System.Runtime.Serialization.EnumMember(Value = @"supportive")]
        Supportive = 18,
    
        [System.Runtime.Serialization.EnumMember(Value = @"venturing")]
        Venturing = 19,
    
        [System.Runtime.Serialization.EnumMember(Value = @"visionary")]
        Visionary = 20,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Text3Reference
    {
        [System.Runtime.Serialization.EnumMember(Value = @"email")]
        Email = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"job_ad_brief")]
        Job_ad_brief = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"job_ad")]
        Job_ad = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_brochure")]
        Marketing_brochure = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_flyer")]
        Marketing_flyer = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_magazine")]
        Marketing_magazine = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_newsletter")]
        Marketing_newsletter = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing")]
        Marketing = 7,
    
        [System.Runtime.Serialization.EnumMember(Value = @"presentation_business")]
        Presentation_business = 8,
    
        [System.Runtime.Serialization.EnumMember(Value = @"press_release")]
        Press_release = 9,
    
        [System.Runtime.Serialization.EnumMember(Value = @"qa_financial")]
        Qa_financial = 10,
    
        [System.Runtime.Serialization.EnumMember(Value = @"radio_report")]
        Radio_report = 11,
    
        [System.Runtime.Serialization.EnumMember(Value = @"report_business")]
        Report_business = 12,
    
        [System.Runtime.Serialization.EnumMember(Value = @"survey")]
        Survey = 13,
    
        [System.Runtime.Serialization.EnumMember(Value = @"default")]
        Default = 14,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Text3Type
    {
        [System.Runtime.Serialization.EnumMember(Value = @"string")]
        String = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"docx")]
        Docx = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"pdf")]
        Pdf = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Bins5
    {
        _2 = 2,
    
        _3 = 3,
    
        _4 = 4,
    
        _5 = 5,
    
        _6 = 6,
    
        _7 = 7,
    
        _8 = 8,
    
        _9 = 9,
    
        _10 = 10,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Bins6
    {
        _2 = 2,
    
        _3 = 3,
    
        _4 = 4,
    
        _5 = 5,
    
        _6 = 6,
    
        _7 = 7,
    
        _8 = 8,
    
        _9 = 9,
    
        _10 = 10,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Results5Name
    {
        [System.Runtime.Serialization.EnumMember(Value = @"competitive")]
        Competitive = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"composed")]
        Composed = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"cooperative")]
        Cooperative = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"directing")]
        Directing = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"empathic")]
        Empathic = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"formal")]
        Formal = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = @"friendly")]
        Friendly = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = @"goal_oriented")]
        Goal_oriented = 7,
    
        [System.Runtime.Serialization.EnumMember(Value = @"innovative")]
        Innovative = 8,
    
        [System.Runtime.Serialization.EnumMember(Value = @"inspiring")]
        Inspiring = 9,
    
        [System.Runtime.Serialization.EnumMember(Value = @"intellectual")]
        Intellectual = 10,
    
        [System.Runtime.Serialization.EnumMember(Value = @"motivating")]
        Motivating = 11,
    
        [System.Runtime.Serialization.EnumMember(Value = @"optimistic")]
        Optimistic = 12,
    
        [System.Runtime.Serialization.EnumMember(Value = @"positive")]
        Positive = 13,
    
        [System.Runtime.Serialization.EnumMember(Value = @"professional")]
        Professional = 14,
    
        [System.Runtime.Serialization.EnumMember(Value = @"reliable")]
        Reliable = 15,
    
        [System.Runtime.Serialization.EnumMember(Value = @"self_confident")]
        Self_confident = 16,
    
        [System.Runtime.Serialization.EnumMember(Value = @"structured")]
        Structured = 17,
    
        [System.Runtime.Serialization.EnumMember(Value = @"supportive")]
        Supportive = 18,
    
        [System.Runtime.Serialization.EnumMember(Value = @"venturing")]
        Venturing = 19,
    
        [System.Runtime.Serialization.EnumMember(Value = @"visionary")]
        Visionary = 20,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Text4Reference
    {
        [System.Runtime.Serialization.EnumMember(Value = @"email")]
        Email = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"job_ad_brief")]
        Job_ad_brief = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"job_ad")]
        Job_ad = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_brochure")]
        Marketing_brochure = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_flyer")]
        Marketing_flyer = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_magazine")]
        Marketing_magazine = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_newsletter")]
        Marketing_newsletter = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing")]
        Marketing = 7,
    
        [System.Runtime.Serialization.EnumMember(Value = @"presentation_business")]
        Presentation_business = 8,
    
        [System.Runtime.Serialization.EnumMember(Value = @"press_release")]
        Press_release = 9,
    
        [System.Runtime.Serialization.EnumMember(Value = @"qa_financial")]
        Qa_financial = 10,
    
        [System.Runtime.Serialization.EnumMember(Value = @"radio_report")]
        Radio_report = 11,
    
        [System.Runtime.Serialization.EnumMember(Value = @"report_business")]
        Report_business = 12,
    
        [System.Runtime.Serialization.EnumMember(Value = @"survey")]
        Survey = 13,
    
        [System.Runtime.Serialization.EnumMember(Value = @"default")]
        Default = 14,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Text4Type
    {
        [System.Runtime.Serialization.EnumMember(Value = @"string")]
        String = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"docx")]
        Docx = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"pdf")]
        Pdf = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Text5Reference
    {
        [System.Runtime.Serialization.EnumMember(Value = @"email")]
        Email = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"job_ad_brief")]
        Job_ad_brief = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"job_ad")]
        Job_ad = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_brochure")]
        Marketing_brochure = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_flyer")]
        Marketing_flyer = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_magazine")]
        Marketing_magazine = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_newsletter")]
        Marketing_newsletter = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing")]
        Marketing = 7,
    
        [System.Runtime.Serialization.EnumMember(Value = @"presentation_business")]
        Presentation_business = 8,
    
        [System.Runtime.Serialization.EnumMember(Value = @"press_release")]
        Press_release = 9,
    
        [System.Runtime.Serialization.EnumMember(Value = @"qa_financial")]
        Qa_financial = 10,
    
        [System.Runtime.Serialization.EnumMember(Value = @"radio_report")]
        Radio_report = 11,
    
        [System.Runtime.Serialization.EnumMember(Value = @"report_business")]
        Report_business = 12,
    
        [System.Runtime.Serialization.EnumMember(Value = @"survey")]
        Survey = 13,
    
        [System.Runtime.Serialization.EnumMember(Value = @"default")]
        Default = 14,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Text5State
    {
        [System.Runtime.Serialization.EnumMember(Value = @"created")]
        Created = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"analyzing")]
        Analyzing = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"finished")]
        Finished = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"failed")]
        Failed = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"delete")]
        Delete = 4,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Text5Type
    {
        [System.Runtime.Serialization.EnumMember(Value = @"string")]
        String = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"docx")]
        Docx = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"pdf")]
        Pdf = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Aggregation_name3 
    {
        /// <summary>Percentile rank of the aggregation ranging from 0 to 100. The value describes what percentage of texts of the selected document type reference had lower weighted sum than the given text.</summary>
        [Newtonsoft.Json.JsonProperty("percentile", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Range(0, 100)]
        public int Percentile { get; set; }
    
        /// <summary>An object containing the percentile rank discretized to the requested bins.</summary>
        [Newtonsoft.Json.JsonProperty("percentile_bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins9 Percentile_bins { get; set; }
    
        /// <summary>Weighted sum of the results to be aggregated.</summary>
        [Newtonsoft.Json.JsonProperty("weighted_sum", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0, 100)]
        public double Weighted_sum { get; set; }
    
        /// <summary>An object containing the weighted_sum discretized to the requested bins.</summary>
        [Newtonsoft.Json.JsonProperty("weighted_sum_bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Weighted_sum_bins5 Weighted_sum_bins { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Other_requested_aggregations3 
    {
        /// <summary>Percentile rank of the aggregation ranging from 0 to 100. The value describes what percentage of texts of the selected document type reference had lower weighted sum than the given text.</summary>
        [Newtonsoft.Json.JsonProperty("percentile", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Range(0, 100)]
        public int Percentile { get; set; }
    
        /// <summary>An object containing the percentile rank discretized to the requested bins.</summary>
        [Newtonsoft.Json.JsonProperty("percentile_bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins10 Percentile_bins { get; set; }
    
        /// <summary>Weighted sum of the results to be aggregated.</summary>
        [Newtonsoft.Json.JsonProperty("weighted_sum", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0, 100)]
        public double Weighted_sum { get; set; }
    
        /// <summary>An object containing the weighted_sum discretized to the requested bins.</summary>
        [Newtonsoft.Json.JsonProperty("weighted_sum_bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Weighted_sum_bins6 Weighted_sum_bins { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Other_requested_comparisons3 
    {
        /// <summary>List containing a ranking for the results and aggregations in the comparison group.</summary>
        [Newtonsoft.Json.JsonProperty("ranking", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Ranking5> Ranking { get; set; }
    
        /// <summary>Top result or aggregation in the comparison group.</summary>
        [Newtonsoft.Json.JsonProperty("top", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Top { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Your_custom_id3 
    {
        /// <summary>List containing a ranking for the results and aggregations in the comparison group.</summary>
        [Newtonsoft.Json.JsonProperty("ranking", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Ranking6> Ranking { get; set; }
    
        /// <summary>Top result or aggregation in the comparison group.</summary>
        [Newtonsoft.Json.JsonProperty("top", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Top { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Optimistic3 
    {
        /// <summary>This list of matched 'patterns' holds important text segments which have either a negative or a positive impact on the given result.</summary>
        [Newtonsoft.Json.JsonProperty("patterns", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Patterns5> Patterns { get; set; }
    
        /// <summary>Percentile rank of the result ranging from 0 to 100. The value describes what percentage of texts of the selected document type reference had lower scores than the given text.</summary>
        [Newtonsoft.Json.JsonProperty("percentile", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Range(0, 100)]
        public int Percentile { get; set; }
    
        /// <summary>An object containing the percentile rank discretized to the requested bins.</summary>
        [Newtonsoft.Json.JsonProperty("percentile_bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins11 Percentile_bins { get; set; }
    
        /// <summary>'score' of the result ranging from 0.0 to 1.0. The value describes to which degree the given text matches the specific result.</summary>
        [Newtonsoft.Json.JsonProperty("score", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0, 1)]
        public double Score { get; set; }
    
        /// <summary>This object of 'selected patterns' holds the most important text segments which have either a negative or a positive impact on the given result. Different forms of the same text are aggregated and output as a single text. For example, "allowed", "allows", and "allow" might all be subsumed under an output of "allow". Numbers are aggregated under the language specific special tags [NUMBERS]/[ZAHLEN].</summary>
        [Newtonsoft.Json.JsonProperty("selected_patterns", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public object Selected_patterns { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Other_requested_results3 
    {
        /// <summary>This list of matched 'patterns' holds important text segments which have either a negative or a positive impact on the given result.</summary>
        [Newtonsoft.Json.JsonProperty("patterns", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Patterns6> Patterns { get; set; }
    
        /// <summary>Percentile rank of the result ranging from 0 to 100. The value describes what percentage of texts of the selected document type reference had lower scores than the given text.</summary>
        [Newtonsoft.Json.JsonProperty("percentile", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Range(0, 100)]
        public int Percentile { get; set; }
    
        /// <summary>An object containing the percentile rank discretized to the requested bins.</summary>
        [Newtonsoft.Json.JsonProperty("percentile_bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins12 Percentile_bins { get; set; }
    
        /// <summary>'score' of the result ranging from 0.0 to 1.0. The value describes to which degree the given text matches the specific result.</summary>
        [Newtonsoft.Json.JsonProperty("score", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0, 1)]
        public double Score { get; set; }
    
        /// <summary>This object of 'selected patterns' holds the most important text segments which have either a negative or a positive impact on the given result. Different forms of the same text are aggregated and output as a single text. For example, "allowed", "allows", and "allow" might all be subsumed under an output of "allow". Numbers are aggregated under the language specific special tags [NUMBERS]/[ZAHLEN].</summary>
        [Newtonsoft.Json.JsonProperty("selected_patterns", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public object Selected_patterns { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Text6Reference
    {
        [System.Runtime.Serialization.EnumMember(Value = @"email")]
        Email = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"job_ad_brief")]
        Job_ad_brief = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"job_ad")]
        Job_ad = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_brochure")]
        Marketing_brochure = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_flyer")]
        Marketing_flyer = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_magazine")]
        Marketing_magazine = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing_newsletter")]
        Marketing_newsletter = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = @"marketing")]
        Marketing = 7,
    
        [System.Runtime.Serialization.EnumMember(Value = @"presentation_business")]
        Presentation_business = 8,
    
        [System.Runtime.Serialization.EnumMember(Value = @"press_release")]
        Press_release = 9,
    
        [System.Runtime.Serialization.EnumMember(Value = @"qa_financial")]
        Qa_financial = 10,
    
        [System.Runtime.Serialization.EnumMember(Value = @"radio_report")]
        Radio_report = 11,
    
        [System.Runtime.Serialization.EnumMember(Value = @"report_business")]
        Report_business = 12,
    
        [System.Runtime.Serialization.EnumMember(Value = @"survey")]
        Survey = 13,
    
        [System.Runtime.Serialization.EnumMember(Value = @"default")]
        Default = 14,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Text6State
    {
        [System.Runtime.Serialization.EnumMember(Value = @"created")]
        Created = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"analyzing")]
        Analyzing = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"finished")]
        Finished = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"failed")]
        Failed = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"delete")]
        Delete = 4,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Text6Type
    {
        [System.Runtime.Serialization.EnumMember(Value = @"string")]
        String = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"docx")]
        Docx = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"pdf")]
        Pdf = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Percentile_bins 
    {
        [Newtonsoft.Json.JsonProperty("2", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins_2 _2 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("3", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins_3 _3 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other requested bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_binsOther_requested_bins Other_requested_bins { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Weighted_sum_bins 
    {
        [Newtonsoft.Json.JsonProperty("2", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Weighted_sum_bins_2 _2 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("3", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Weighted_sum_bins_3 _3 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other requested bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Weighted_sum_binsOther_requested_bins Other_requested_bins { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Percentile_bins2 
    {
        [Newtonsoft.Json.JsonProperty("2", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins2_2 _2 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("3", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins2_3 _3 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other requested bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins2Other_requested_bins Other_requested_bins { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Weighted_sum_bins2 
    {
        [Newtonsoft.Json.JsonProperty("2", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Weighted_sum_bins2_2 _2 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("3", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Weighted_sum_bins2_3 _3 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other requested bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Weighted_sum_bins2Other_requested_bins Other_requested_bins { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Ranking 
    {
        /// <summary>Name of the ranked result or aggregation.</summary>
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; }
    
        /// <summary>Ratio of the percentile rank of this result compared to all other results in the comparison group.</summary>
        [Newtonsoft.Json.JsonProperty("ratio", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0, 1)]
        public double Ratio { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Ranking2 
    {
        /// <summary>Name of the ranked result or aggregation.</summary>
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; }
    
        /// <summary>Ratio of the percentile rank of this result compared to all other results in the comparison group.</summary>
        [Newtonsoft.Json.JsonProperty("ratio", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0, 1)]
        public double Ratio { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Patterns 
    {
        /// <summary>The 'chars' array holds the pair of character indices matched by the pattern. The indices are 0-based. For instance, the value [5, 12] for chars states that the pattern consists of the text segment starting at the 6th character of the text and ending with the 13th.</summary>
        [Newtonsoft.Json.JsonProperty("chars", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<int> Chars { get; set; } = new System.Collections.ObjectModel.Collection<int>();
    
        /// <summary>'weight' associated with the matched pattern that range from -1.0 to +1.0. Negative weights indicate that the pattern has a negative impact on the according result whereas positive weights imply a positive impact on the result.</summary>
        [Newtonsoft.Json.JsonProperty("weight", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Range(-1, 1)]
        public double Weight { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Percentile_bins3 
    {
        [Newtonsoft.Json.JsonProperty("2", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins3_2 _2 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("3", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins3_3 _3 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other requested bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins3Other_requested_bins Other_requested_bins { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Patterns2 
    {
        /// <summary>The 'chars' array holds the pair of character indices matched by the pattern. The indices are 0-based. For instance, the value [5, 12] for chars states that the pattern consists of the text segment starting at the 6th character of the text and ending with the 13th.</summary>
        [Newtonsoft.Json.JsonProperty("chars", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<int> Chars { get; set; } = new System.Collections.ObjectModel.Collection<int>();
    
        /// <summary>'weight' associated with the matched pattern that range from -1.0 to +1.0. Negative weights indicate that the pattern has a negative impact on the according result whereas positive weights imply a positive impact on the result.</summary>
        [Newtonsoft.Json.JsonProperty("weight", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Range(-1, 1)]
        public double Weight { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Percentile_bins4 
    {
        [Newtonsoft.Json.JsonProperty("2", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins4_2 _2 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("3", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins4_3 _3 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other requested bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins4Other_requested_bins Other_requested_bins { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Percentile_bins5 
    {
        [Newtonsoft.Json.JsonProperty("2", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins5_2 _2 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("3", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins5_3 _3 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other requested bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins5Other_requested_bins Other_requested_bins { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Weighted_sum_bins3 
    {
        [Newtonsoft.Json.JsonProperty("2", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Weighted_sum_bins3_2 _2 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("3", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Weighted_sum_bins3_3 _3 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other requested bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Weighted_sum_bins3Other_requested_bins Other_requested_bins { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Percentile_bins6 
    {
        [Newtonsoft.Json.JsonProperty("2", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins6_2 _2 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("3", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins6_3 _3 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other requested bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins6Other_requested_bins Other_requested_bins { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Weighted_sum_bins4 
    {
        [Newtonsoft.Json.JsonProperty("2", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Weighted_sum_bins4_2 _2 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("3", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Weighted_sum_bins4_3 _3 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other requested bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Weighted_sum_bins4Other_requested_bins Other_requested_bins { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Ranking3 
    {
        /// <summary>Name of the ranked result or aggregation.</summary>
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; }
    
        /// <summary>Ratio of the percentile rank of this result compared to all other results in the comparison group.</summary>
        [Newtonsoft.Json.JsonProperty("ratio", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0, 1)]
        public double Ratio { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Ranking4 
    {
        /// <summary>Name of the ranked result or aggregation.</summary>
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; }
    
        /// <summary>Ratio of the percentile rank of this result compared to all other results in the comparison group.</summary>
        [Newtonsoft.Json.JsonProperty("ratio", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0, 1)]
        public double Ratio { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Patterns3 
    {
        /// <summary>The 'chars' array holds the pair of character indices matched by the pattern. The indices are 0-based. For instance, the value [5, 12] for chars states that the pattern consists of the text segment starting at the 6th character of the text and ending with the 13th.</summary>
        [Newtonsoft.Json.JsonProperty("chars", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<int> Chars { get; set; } = new System.Collections.ObjectModel.Collection<int>();
    
        /// <summary>'weight' associated with the matched pattern that range from -1.0 to +1.0. Negative weights indicate that the pattern has a negative impact on the according result whereas positive weights imply a positive impact on the result.</summary>
        [Newtonsoft.Json.JsonProperty("weight", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Range(-1, 1)]
        public double Weight { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Percentile_bins7 
    {
        [Newtonsoft.Json.JsonProperty("2", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins7_2 _2 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("3", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins7_3 _3 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other requested bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins7Other_requested_bins Other_requested_bins { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Patterns4 
    {
        /// <summary>The 'chars' array holds the pair of character indices matched by the pattern. The indices are 0-based. For instance, the value [5, 12] for chars states that the pattern consists of the text segment starting at the 6th character of the text and ending with the 13th.</summary>
        [Newtonsoft.Json.JsonProperty("chars", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<int> Chars { get; set; } = new System.Collections.ObjectModel.Collection<int>();
    
        /// <summary>'weight' associated with the matched pattern that range from -1.0 to +1.0. Negative weights indicate that the pattern has a negative impact on the according result whereas positive weights imply a positive impact on the result.</summary>
        [Newtonsoft.Json.JsonProperty("weight", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Range(-1, 1)]
        public double Weight { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Percentile_bins8 
    {
        [Newtonsoft.Json.JsonProperty("2", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins8_2 _2 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("3", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins8_3 _3 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other requested bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins8Other_requested_bins Other_requested_bins { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Percentile_bins9 
    {
        [Newtonsoft.Json.JsonProperty("2", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins9_2 _2 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("3", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins9_3 _3 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other requested bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins9Other_requested_bins Other_requested_bins { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Weighted_sum_bins5 
    {
        [Newtonsoft.Json.JsonProperty("2", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Weighted_sum_bins5_2 _2 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("3", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Weighted_sum_bins5_3 _3 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other requested bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Weighted_sum_bins5Other_requested_bins Other_requested_bins { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Percentile_bins10 
    {
        [Newtonsoft.Json.JsonProperty("2", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins10_2 _2 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("3", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins10_3 _3 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other requested bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins10Other_requested_bins Other_requested_bins { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Weighted_sum_bins6 
    {
        [Newtonsoft.Json.JsonProperty("2", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Weighted_sum_bins6_2 _2 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("3", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Weighted_sum_bins6_3 _3 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other requested bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Weighted_sum_bins6Other_requested_bins Other_requested_bins { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Ranking5 
    {
        /// <summary>Name of the ranked result or aggregation.</summary>
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; }
    
        /// <summary>Ratio of the percentile rank of this result compared to all other results in the comparison group.</summary>
        [Newtonsoft.Json.JsonProperty("ratio", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0, 1)]
        public double Ratio { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Ranking6 
    {
        /// <summary>Name of the ranked result or aggregation.</summary>
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; }
    
        /// <summary>Ratio of the percentile rank of this result compared to all other results in the comparison group.</summary>
        [Newtonsoft.Json.JsonProperty("ratio", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0, 1)]
        public double Ratio { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Patterns5 
    {
        /// <summary>The 'chars' array holds the pair of character indices matched by the pattern. The indices are 0-based. For instance, the value [5, 12] for chars states that the pattern consists of the text segment starting at the 6th character of the text and ending with the 13th.</summary>
        [Newtonsoft.Json.JsonProperty("chars", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<int> Chars { get; set; } = new System.Collections.ObjectModel.Collection<int>();
    
        /// <summary>'weight' associated with the matched pattern that range from -1.0 to +1.0. Negative weights indicate that the pattern has a negative impact on the according result whereas positive weights imply a positive impact on the result.</summary>
        [Newtonsoft.Json.JsonProperty("weight", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Range(-1, 1)]
        public double Weight { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Percentile_bins11 
    {
        [Newtonsoft.Json.JsonProperty("2", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins11_2 _2 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("3", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins11_3 _3 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other requested bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins11Other_requested_bins Other_requested_bins { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Patterns6 
    {
        /// <summary>The 'chars' array holds the pair of character indices matched by the pattern. The indices are 0-based. For instance, the value [5, 12] for chars states that the pattern consists of the text segment starting at the 6th character of the text and ending with the 13th.</summary>
        [Newtonsoft.Json.JsonProperty("chars", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<int> Chars { get; set; } = new System.Collections.ObjectModel.Collection<int>();
    
        /// <summary>'weight' associated with the matched pattern that range from -1.0 to +1.0. Negative weights indicate that the pattern has a negative impact on the according result whereas positive weights imply a positive impact on the result.</summary>
        [Newtonsoft.Json.JsonProperty("weight", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Range(-1, 1)]
        public double Weight { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Percentile_bins12 
    {
        [Newtonsoft.Json.JsonProperty("2", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins12_2 _2 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("3", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins12_3 _3 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other requested bins", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Percentile_bins12Other_requested_bins Other_requested_bins { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Percentile_bins_2
    {
        _0 = 0,
    
        _1 = 1,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Percentile_bins_3
    {
        _0 = 0,
    
        _1 = 1,
    
        _2 = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Percentile_binsOther_requested_bins
    {
        _0 = 0,
    
        _1 = 1,
    
        _2 = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Weighted_sum_bins_2
    {
        _0 = 0,
    
        _1 = 1,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Weighted_sum_bins_3
    {
        _0 = 0,
    
        _1 = 1,
    
        _2 = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Weighted_sum_binsOther_requested_bins
    {
        _0 = 0,
    
        _1 = 1,
    
        _2 = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Percentile_bins2_2
    {
        _0 = 0,
    
        _1 = 1,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Percentile_bins2_3
    {
        _0 = 0,
    
        _1 = 1,
    
        _2 = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Percentile_bins2Other_requested_bins
    {
        _0 = 0,
    
        _1 = 1,
    
        _2 = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Weighted_sum_bins2_2
    {
        _0 = 0,
    
        _1 = 1,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Weighted_sum_bins2_3
    {
        _0 = 0,
    
        _1 = 1,
    
        _2 = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Weighted_sum_bins2Other_requested_bins
    {
        _0 = 0,
    
        _1 = 1,
    
        _2 = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Percentile_bins3_2
    {
        _0 = 0,
    
        _1 = 1,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Percentile_bins3_3
    {
        _0 = 0,
    
        _1 = 1,
    
        _2 = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Percentile_bins3Other_requested_bins
    {
        _0 = 0,
    
        _1 = 1,
    
        _2 = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Percentile_bins4_2
    {
        _0 = 0,
    
        _1 = 1,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Percentile_bins4_3
    {
        _0 = 0,
    
        _1 = 1,
    
        _2 = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Percentile_bins4Other_requested_bins
    {
        _0 = 0,
    
        _1 = 1,
    
        _2 = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Percentile_bins5_2
    {
        _0 = 0,
    
        _1 = 1,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Percentile_bins5_3
    {
        _0 = 0,
    
        _1 = 1,
    
        _2 = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Percentile_bins5Other_requested_bins
    {
        _0 = 0,
    
        _1 = 1,
    
        _2 = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Weighted_sum_bins3_2
    {
        _0 = 0,
    
        _1 = 1,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Weighted_sum_bins3_3
    {
        _0 = 0,
    
        _1 = 1,
    
        _2 = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Weighted_sum_bins3Other_requested_bins
    {
        _0 = 0,
    
        _1 = 1,
    
        _2 = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Percentile_bins6_2
    {
        _0 = 0,
    
        _1 = 1,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Percentile_bins6_3
    {
        _0 = 0,
    
        _1 = 1,
    
        _2 = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Percentile_bins6Other_requested_bins
    {
        _0 = 0,
    
        _1 = 1,
    
        _2 = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Weighted_sum_bins4_2
    {
        _0 = 0,
    
        _1 = 1,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Weighted_sum_bins4_3
    {
        _0 = 0,
    
        _1 = 1,
    
        _2 = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Weighted_sum_bins4Other_requested_bins
    {
        _0 = 0,
    
        _1 = 1,
    
        _2 = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Percentile_bins7_2
    {
        _0 = 0,
    
        _1 = 1,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Percentile_bins7_3
    {
        _0 = 0,
    
        _1 = 1,
    
        _2 = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Percentile_bins7Other_requested_bins
    {
        _0 = 0,
    
        _1 = 1,
    
        _2 = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Percentile_bins8_2
    {
        _0 = 0,
    
        _1 = 1,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Percentile_bins8_3
    {
        _0 = 0,
    
        _1 = 1,
    
        _2 = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Percentile_bins8Other_requested_bins
    {
        _0 = 0,
    
        _1 = 1,
    
        _2 = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Percentile_bins9_2
    {
        _0 = 0,
    
        _1 = 1,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Percentile_bins9_3
    {
        _0 = 0,
    
        _1 = 1,
    
        _2 = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Percentile_bins9Other_requested_bins
    {
        _0 = 0,
    
        _1 = 1,
    
        _2 = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Weighted_sum_bins5_2
    {
        _0 = 0,
    
        _1 = 1,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Weighted_sum_bins5_3
    {
        _0 = 0,
    
        _1 = 1,
    
        _2 = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Weighted_sum_bins5Other_requested_bins
    {
        _0 = 0,
    
        _1 = 1,
    
        _2 = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Percentile_bins10_2
    {
        _0 = 0,
    
        _1 = 1,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Percentile_bins10_3
    {
        _0 = 0,
    
        _1 = 1,
    
        _2 = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Percentile_bins10Other_requested_bins
    {
        _0 = 0,
    
        _1 = 1,
    
        _2 = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Weighted_sum_bins6_2
    {
        _0 = 0,
    
        _1 = 1,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Weighted_sum_bins6_3
    {
        _0 = 0,
    
        _1 = 1,
    
        _2 = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Weighted_sum_bins6Other_requested_bins
    {
        _0 = 0,
    
        _1 = 1,
    
        _2 = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Percentile_bins11_2
    {
        _0 = 0,
    
        _1 = 1,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Percentile_bins11_3
    {
        _0 = 0,
    
        _1 = 1,
    
        _2 = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Percentile_bins11Other_requested_bins
    {
        _0 = 0,
    
        _1 = 1,
    
        _2 = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Percentile_bins12_2
    {
        _0 = 0,
    
        _1 = 1,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Percentile_bins12_3
    {
        _0 = 0,
    
        _1 = 1,
    
        _2 = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum Percentile_bins12Other_requested_bins
    {
        _0 = 0,
    
        _1 = 1,
    
        _2 = 2,
    
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.0.5.0 (NJsonSchema v10.0.22.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class ApiException : System.Exception
    {
        public int StatusCode { get; private set; }

        public string Response { get; private set; }

        public System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> Headers { get; private set; }

        public ApiException(string message, int statusCode, string response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Exception innerException) 
            : base(message + "\n\nStatus: " + statusCode + "\nResponse: \n" + response.Substring(0, response.Length >= 512 ? 512 : response.Length), innerException)
        {
            StatusCode = statusCode;
            Response = response; 
            Headers = headers;
        }

        public override string ToString()
        {
            return string.Format("HTTP Response: \n\n{0}\n\n{1}", Response, base.ToString());
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.0.5.0 (NJsonSchema v10.0.22.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class ApiException<TResult> : ApiException
    {
        public TResult Result { get; private set; }

        public ApiException(string message, int statusCode, string response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, TResult result, System.Exception innerException) 
            : base(message, statusCode, response, headers, innerException)
        {
            Result = result;
        }
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108